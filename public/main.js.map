{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/contactus/contactus-grid.component.html","./src/app/contactus/contactus-list.component.html","./src/app/contactus/contactus.component.html","./src/app/contactus/neworder.component.html","./src/app/customers/customer-edit-reactive.component.html","./src/app/customers/customer-edit.component.html","./src/app/customers/customers-grid.component.html","./src/app/customers/customers.component.html","./src/app/message/message.component.html","./src/app/modal/modal.component.html","./src/app/products/product-edit.component.html","./src/app/products/products-grid.component.html","./src/app/products/products.component.html","./src/app/shared/pagination/pagination.component.html","./src/app/user/login.component.html","./src/app/welcome/welcome.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.animation.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/contactus/contactus-grid.component.ts","./src/app/contactus/contactus-list.component.ts","./src/app/contactus/contactus.component.ts","./src/app/contactus/customer.ts","./src/app/contactus/neworder.component.ts","./src/app/core/auth.service.ts","./src/app/core/core.module.ts","./src/app/core/data-filter.service.ts","./src/app/core/data.service.ts","./src/app/core/message.service.ts","./src/app/core/sorter.ts","./src/app/core/trackby.service.ts","./src/app/customers/customer-edit-reactive.component.ts","./src/app/customers/customer-edit.component.ts","./src/app/customers/customers-grid.component.ts","./src/app/customers/customers.component.ts","./src/app/message/message.component.ts","./src/app/modal/index.ts","./src/app/modal/modal.component.less","./src/app/modal/modal.component.ts","./src/app/modal/modal.module.ts","./src/app/modal/modal.service.ts","./src/app/products/product-edit.component.ts","./src/app/products/products-grid.component.ts","./src/app/products/products.component.ts","./src/app/shared/ensureModuleLoadedOnceGuard.ts","./src/app/shared/filter-textbox/filter-textbox.component.ts","./src/app/shared/pagination/pagination.component.css","./src/app/shared/pagination/pagination.component.ts","./src/app/shared/pipes/capitalize.pipe.ts","./src/app/shared/pipes/trim.pipe.ts","./src/app/shared/property-resolver.ts","./src/app/shared/shared.module.ts","./src/app/shared/validation.service.ts","./src/app/user/login.component.ts","./src/app/welcome/welcome.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAe,gOAAiK,aAAa,mjBAAmjB,cAAc,+PAA+P,cAAc,kcAAkc,YAAY,mpC;;;;;;;;;;;;ACAz9C;AAAe,8jCAA+/B,2JAA2J,mCAAmC,IAAI,iCAAiC,2DAA2D,kBAAkB,iCAAiC,kBAAkB,qCAAqC,qBAAqB,iCAAiC,sBAAsB,iCAAiC,iDAAiD,iCAAiC,mDAAmD,iCAAiC,kBAAkB,iHAAiH,+CAA+C,sBAAsB,kH;;;;;;;;;;;;ACAj3D;AAAe,yIAA0E,SAAS,8e;;;;;;;;;;;;ACAlG;AAAe,mtBAAopB,2NAA2N,y0BAAy0B,wNAAwN,43BAA43B,6BAA6B,6EAA6E,gBAAgB,ojBAAojB,oCAAoC,mFAAmF,uBAAuB,4iBAA4iB,kDAAkD,+6OAA+6O,oBAAoB,qHAAqH,sBAAsB,uBAAuB,6mB;;;;;;;;;;;;ACA1xX;AAAe,oJAAqF,mCAAmC,OAAO,GAAG,iCAAiC,6WAA6W,kBAAkB,0JAA0J,kBAAkB,uKAAuK,yBAAyB,sXAAsX,uBAAuB,gCAAgC,uBAAuB,kCAAkC,uBAAuB,iCAAiC,uBAAuB,kMAAkM,qBAAqB,kMAAkM,sBAAsB,gNAAgN,iDAAiD,kNAAkN,mDAAmD,2MAA2M,kBAAkB,gTAAgT,MAAM,8IAA8I,MAAM,qWAAqW,MAAM,kLAAkL,MAAM,mKAAmK,iBAAiB,oKAAoK,gBAAgB,0C;;;;;;;;;;;;ACAz7H;AAAe,uKAAwG,sBAAsB,GAAG,qBAAqB,+1EAA+1E,YAAY,6MAA6M,MAAM,8EAA8E,MAAM,qQAAqQ,MAAM,gKAAgK,MAAM,iGAAiG,iBAAiB,oIAAoI,gBAAgB,4B;;;;;;;;;;;;ACA9+G;AAAe,uKAAwG,sBAAsB,GAAG,qBAAqB,2hDAA2hD,GAAG,qhCAAqhC,YAAY,6MAA6M,MAAM,8EAA8E,MAAM,qQAAqQ,MAAM,gKAAgK,MAAM,iGAAiG,iBAAiB,oIAAoI,gBAAgB,sC;;;;;;;;;;;;ACAlsH;AAAe,4NAA6J,8bAA8b,sGAAsG,+BAA+B,kSAAkS,+DAA+D,uCAAuC,kCAAkC,uBAAuB,oBAAoB,uBAAuB,wBAAwB,uBAAuB,uBAAuB,uBAAuB,sDAAsD,oFAAoF,qCAAqC,oBAAoB,0F;;;;;;;;;;;;ACA3/C;AAAe,2HAA4D,SAAS,+UAA+U,mb;;;;;;;;;;;;ACAna;AAAe,gUAAiQ,yFAAyF,WAAW,+C;;;;;;;;;;;;ACApX;AAAe,8N;;;;;;;;;;;;ACAf;AAAe,oJAAqF,uBAAuB,6uHAA6uH,MAAM,8IAA8I,MAAM,oWAAoW,MAAM,kLAAkL,MAAM,mKAAmK,iBAAiB,oKAAoK,gBAAgB,qUAAqU,uBAAuB,mFAAmF,6BAA6B,iFAAiF,2BAA2B,iFAAiF,2BAA2B,iFAAiF,oBAAoB,oFAAoF,uBAAuB,+HAA+H,oBAAoB,2SAA2S,MAAM,8EAA8E,iBAAiB,2G;;;;;;;;;;;;ACAnyM;AAAe,0RAA2N,6rBAA6rB,8JAA8J,oBAAoB,2MAA2M,oCAAoC,sGAAsG,oCAAoC,uCAAuC,uBAAuB,mCAAmC,6BAA6B,mCAAmC,2BAA2B,mCAAmC,2BAA2B,mCAAmC,iCAAiC,mHAAmH,iDAAiD,kBAAkB,0UAA0U,oBAAoB,gH;;;;;;;;;;;;ACApyE;AAAe,yIAA0E,SAAS,4zB;;;;;;;;;;;;ACAlG;AAAe,8RAA+N,+JAA+J,QAAQ,0KAA0K,gD;;;;;;;;;;;;ACA/jB;AAAe,2HAA4D,WAAW,itBAAitB,gFAAgF,iwBAAiwB,gFAAgF,i5BAAi5B,cAAc,qB;;;;;;;;;;;;ACAvmF;AAAe,2HAA4D,aAAa,utK;;;;;;;;;;;;ACAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;;AAEO;AACP;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnMyC;AACc;AAEc;AACS;AACF;AACiB;AAE9B;AACY;AACT;AACO;AACjB;AACa;AACS;AACA;AACX;AAEnE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE;IACvD,EAAE,IAAI,EAAG,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAC;IAChD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAC;IACjD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,sFAAoB,EAAC;IACxD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAC;IACnD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,wFAAqB,EAAC;IAC1D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,2FAAsB,EAAC;IAC5D,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kFAAkB,EAAC;IACnD,EAAE,IAAI,EAAE,0BAA0B,EAAE,SAAS,EAAE,kFAAkB,EAAC;IAClE,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,gFAAiB,EAAC;IACtD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,qDAAqD;CAC7F,CAAC;AAMF,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAa5B;AAZQ,2BAAU,GAAG,CAAE,iFAAkB;IAClB,wFAAqB;IACrB,yGAA6B;IAC7B,0FAAsB;IACtB,8EAAiB;IACjB,uFAAqB;IACrB,sFAAoB;IACpB,qEAAc;IACd,kFAAkB;IAClB,2FAAsB;IACtB,2FAAsB;IACtB,gFAAiB,CAAE,CAAC;AAZ/B,gBAAgB;IAJ5B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAE,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE;QACzC,OAAO,EAAE,CAAE,4DAAY,CAAE;KAC1B,CAAC;GACW,gBAAgB,CAa5B;AAb4B;;;;;;;;;;;;;;;;;;ACrC2D;AAEjF,MAAM,gBAAgB,GAAG,mEAAO,CAAC,kBAAkB,EAAE;IAC1D,oCAAoC;IACpC,sEAAU,CAAC,SAAS,EAAE;QACpB,kBAAkB;QAClB,gDAAgD;QAChD,0FAA0F;QAC1F,iEAAK,CAAC,gBAAgB,EAAE,iEAAK,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;QACnG,mCAAmC;QACnC,iEAAK,CAAC;YACJ,iEAAK,CAAC,QAAQ,EAAE;gBACd,iEAAK,CAAC,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC;gBACxC,mEAAO,CAAC,eAAe,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC,CAAC;aACjE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YACtB,iEAAK,CAAC,QAAQ,EAAE;gBACd,iEAAK,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;gBACtC,mEAAO,CAAC,eAAe,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,mBAAmB,EAAE,CAAC,CAAC;aACpE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;SACvB,CAAC;KACH,CAAC;CACH,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACrB+C;AACC;AACD;AACM;AACC;AAClB;AAOvC,IAAa,YAAY,GAAzB,MAAa,YAAY;IAqBvB,YAAoB,WAAwB,EACxB,cAA8B,EAC9B,MAAc,EACd,KAAqB,EACrB,YAA0B;QAJ1B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,iBAAY,GAAZ,YAAY,CAAc;QAvB9C,cAAS,GAAG,eAAe,CAAC;QAE5B,YAAO,GAAG,IAAI,CAAC;IAqBmC,CAAC;IApBnD,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;IACrC,CAAC;IAED,IAAI,QAAQ;QACV,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;YAChC,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC;SAC9C;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;IACzC,CAAC;IASD,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAC;IACpC,CAAC;IAED,yCAAyC;IACzC,oDAAoD;IACpD,6BAA6B;IAC7B,QAAQ;IAER,kDAAkD;IAClD,oDAAoD;IACpD,qDAAqD;IACrD,kCAAkC;IAClC,YAAY;IACZ,IAAI;IAEJ,2BAA2B;IAC3B,gEAAgE;IAChE,4CAA4C;IAC5C,IAAI;IAEJ,wBAAwB;IACxB,yDAAyD;IACzD,6CAA6C;IAC7C,IAAI;IAEJ,SAAS,CAAC,EAAU;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;CACF;;YA3CkC,8DAAW;YACR,oEAAc;YACtB,sDAAM;YACP,8DAAc;YACP,mDAAY;;AAzBnC,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,yMAAmC;QACnC,UAAU,EAAE,CAAC,+DAAgB,CAAC;KAC/B,CAAC;GACW,YAAY,CAgExB;AAhEwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZgB;AACiB;AACoB;AAC/B;AACS;AACR;AACM;AACS;AACG;AACS;AACF;AACjB;AACO;AACM;AACS;AACA;AACX;AAC7B;AAyBtC,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IAvBrB,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,uEAAa;YACb,4FAAuB;YACvB,oEAAgB;YAChB,4DAAU;YACV,kEAAY;YACZ,mDAAW;SACZ;QACD,YAAY,EAAE,CAAE,2DAAY;YACZ,oEAAgB,CAAC,UAAU;YAC3B,2EAAgB;YAChB,8EAAiB;YACjB,wFAAqB;YACrB,sFAAoB;YACpB,qEAAc;YACd,4EAAgB;YAChB,kFAAkB;YAClB,2FAAsB;YACtB,2FAAsB;YACtB,gFAAiB,CAAC;QAClC,SAAS,EAAK,CAAE,2DAAY,CAAE;KAC/B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;AC1C4D;AAG1C;AACiB;AAUzD,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAMjC,YAAoB,MAAc,EAAS,OAAuB;QAA9C,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAJlE,eAAU,GAAG,EAAE,CAAC;QAChB,gBAAW,GAAG,CAAC,CAAC;QACP,iBAAY,GAAkB,EAAE,CAAC;IAE4B,CAAC;IAEvE,QAAQ;IAER,CAAC;IAED,IAAI,CAAC,IAAY;QACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;CAEF;;YAV6B,mDAAM;YAAkB,oEAAc;;AAFzD;IAAR,2DAAK,EAAE;4DAAkC;AAJ/B,sBAAsB;IARlC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,yOAA8C;QAC9C,uEAAuE;QACvE,oEAAoE;QACpE,gFAAgF;QAChF,eAAe,EAAE,qEAAuB,CAAC,MAAM;KAChD,CAAC;GACW,sBAAsB,CAgBlC;AAhBkC;;;;;;;;;;;;;;;;;;;;;;ACdsB;AAChB;AACuB;AACb;AACA;AAOnD,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAWjC,YAAoB,MAAc,EACd,WAAwB,EACxB,UAA6B,EAC7B,WAAwB;QAHxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAmB;QAC7B,gBAAW,GAAX,WAAW,CAAa;QAX5C,iBAAY,GAAkB,EAAE,CAAC;QACjC,sBAAiB,GAAkB,EAAE,CAAC;QAEtC,iBAAY,GAAG,CAAC,CAAC;QACjB,aAAQ,GAAG,EAAE,CAAC;IAOiC,CAAC;IANhD,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;IACrC,CAAC;IAMD,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC;QAC7B,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAE3B,CAAC;IAED,aAAa,CAAC,UAAkB;QAE9B,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3D,IAAI,UAAU,IAAI,IAAI,CAAC,YAAY,EAAE;YACnC,MAAM,KAAK,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;YAC1D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;SACvF;aAAM;YACL,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC;SAC5C;IACH,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE;aACnC,SAAS,CAAC,CAAC,QAAuB,EAAE,EAAE;YACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QACxD,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAC9B,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC,CAAC;IACpE,CAAC;CACF;;YAlC6B,sDAAM;YACD,8DAAW;YACZ,2EAAiB;YAChB,8DAAW;;AAdjC,sBAAsB;IAJlC,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,yOAA8C;KAC/C,CAAC;GACW,sBAAsB,CA6ClC;AA7CkC;;;;;;;;;;;;;;;;;;;;;;;;ACXe;AAC2D;AAC/D;AACR;AACa;AACM;AAEd;AAI3C,SAAS,YAAY,CAAC,CAAkB;IACtC,MAAM,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACpC,MAAM,mBAAmB,GAAG,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAElD,IAAI,YAAY,CAAC,QAAQ,IAAI,mBAAmB,CAAC,QAAQ,EAAE;QACzD,OAAO,IAAI,CAAC;KACb;IAED,IAAI,YAAY,CAAC,KAAK,KAAK,mBAAmB,CAAC,KAAK,EAAE;QACpD,OAAO,IAAI,CAAC;KACb;IAED,OAAO,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC;AACvB,CAAC;AAED,SAAS,WAAW,CAAC,GAAW,EAAE,GAAW;IAC3C,OAAO,CAAC,CAAkB,EAAmC,EAAE;QAC7D,IAAI,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,EAAE;YAC1E,OAAO,EAAE,KAAK,EAAG,IAAI,EAAC,CAAC;SACxB;QAED,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;AACJ,CAAC;AAMD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IA8B7B,YAAoB,EAAe,EACf,KAAqB,EACrB,WAAwB,EACxB,MAAc,EACd,QAAkB;QAJlB,OAAE,GAAF,EAAE,CAAa;QACf,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QAhCtC,aAAQ,GAAG,IAAI,kDAAQ,EAAE,CAAC;QAK1B,YAAO,GAAY;YACjB,eAAe,EAAE,EAAE;YACnB,iBAAiB,EAAE,EAAE;YACrB,eAAe,EAAE,CAAC;YAClB,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,EAAE;SACb,CAAC;QAOI,uBAAkB,GAAG;YAC3B,QAAQ,EAAE,kCAAkC;YAC5C,KAAK,EAAE,qCAAqC;YAC5C,YAAY,EAAE,sCAAsC;SACrD,CAAC;QAEF,WAAM,GAAG,IAAI,IAAI,EAAE,CAAC;IAMwB,CAAC;IAjB3C,IAAI,SAAS;QAEX,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAc,CAAC;IAC1D,CAAC;IAgBD,QAAQ;QAEN,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC;QAC9C,IAAI,EAAE,KAAK,GAAG,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SACrB;aAAM;YACL,OAAO,CAAC,GAAG,CAAE,uBAAuB,CAAC,CAAC;SACvC;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/D,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/D,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,KAAK,EAAE,EAAE;YACT,YAAY,EAAE,OAAO;YACrB,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;YACb,eAAe,EAAE,EAAE;YACnB,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC;YACrE,KAAK,EAAE,EAAE;YACT,SAAS,EAAE,EAAE;YACb,YAAY,EAAE,IAAI;YAClB,WAAW,EAAE,EAAE;SACf,CAAC,CAAC;QAGJ,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,SAAS,CAAE,KAAK,CAAC,EAAE,CACrE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;QAE/B,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrD,YAAY,CAAC,YAAY,CAAC,IAAI,CAC1B,mEAAY,CAAC,IAAI,CAAC,CACjB,CAAC,SAAS,CACT,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CACvC,CAAC;IAGR,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;aAC5B,SAAS,CAAC,CAAC,OAAgB,EAAE,EAAE;YAC9B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACjC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/D,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC/D,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;gBACpD,KAAK,EAAE,EAAE;gBACT,YAAY,EAAE,OAAO;gBACrB,UAAU,EAAE,EAAE;gBACd,UAAU,EAAE,EAAE;gBACd,UAAU,EAAE,EAAE;gBACd,UAAU,EAAE,EAAE;gBACd,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,EAAE;gBACb,eAAe,EAAE,EAAE;gBACnB,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC;gBACrE,KAAK,EAAE,EAAE;gBACT,SAAS,EAAE,OAAO,CAAC,GAAG;gBACtB,YAAY,EAAE,OAAO,CAAC,QAAQ;gBAC9B,WAAW,EAAE,OAAO,CAAC,WAAW;aACjC,CAAC,CAAC;QACL,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACtC,CAAC;IAEC,IAAI;QACE,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;aAC3D,SAAS,CAAC,CAAC,aAA0B,EAAE,EAAE;YACxC,IAAI,aAAa,EAAE;gBACjB,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;gBAClD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,4BAA4B,CAAC;aAClD;QACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACjC,CAAC;IAED,eAAe,CAAC,SAAiB;QAC/B,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrD,IAAI,SAAS,KAAK,MAAM,IAAI,SAAS,KAAK,UAAU,EAAE;YACpD,YAAY,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACjD;aAAM;YACL,YAAY,CAAC,eAAe,EAAE,CAAC;SAChC;QACD,YAAY,CAAC,sBAAsB,EAAE,CAAC;IACxC,CAAC;IAED,UAAU,CAAC,CAAkB;QAC3B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;YACtC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAC3C,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAClD;IACH,CAAC;IAED,iBAAiB,CAAC,CAAkB;QAClC,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;YACtC,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAClD,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAClD;IACH,CAAC;CACF;;YAnHyB,0DAAW;YACR,8DAAc;YACR,8DAAW;YAChB,sDAAM;YACJ,wDAAQ;;AAlC3B,kBAAkB;IAJ9B,+DAAS,CAAC;QACT,+NAAyC;QACzC,SAAS,EAAE,CAAC,wDAAQ,CAAC;KACtB,CAAC;GACW,kBAAkB,CAiJ9B;AAjJ8B;;;;;;;;;;;;;;;;;ACxCxB,MAAM,QAAQ;IAEnB,YACS,YAAY,EAAE,EACd,WAAW,EAAE,EACb,QAAQ,EAAE,EACV,eAAe,EAAE,EACjB,QAAQ,EAAE,EACV,eAAe,OAAO,EACtB,aAAa,OAAO,EACpB,aAAa,EAAE,EACf,aAAa,EAAE,EACf,aAAa,EAAE,EACf,WAAW,EAAE,EACb,YAAY,EAAE,EACd,QAAQ,EAAE,EACV,YAAY,EAAE,EACd,eAAe,IAAI,EACnB,cAAc,EAAE;QAfhB,cAAS,GAAT,SAAS,CAAK;QACd,aAAQ,GAAR,QAAQ,CAAK;QACb,UAAK,GAAL,KAAK,CAAK;QACV,iBAAY,GAAZ,YAAY,CAAK;QACjB,UAAK,GAAL,KAAK,CAAK;QACV,iBAAY,GAAZ,YAAY,CAAU;QACtB,eAAU,GAAV,UAAU,CAAU;QACpB,eAAU,GAAV,UAAU,CAAK;QACf,eAAU,GAAV,UAAU,CAAK;QACf,eAAU,GAAV,UAAU,CAAK;QACf,aAAQ,GAAR,QAAQ,CAAK;QACb,cAAS,GAAT,SAAS,CAAK;QACd,UAAK,GAAL,KAAK,CAAK;QACV,cAAS,GAAT,SAAS,CAAK;QACd,iBAAY,GAAZ,YAAY,CAAO;QACnB,gBAAW,GAAX,WAAW,CAAK;IAAI,CAAC;CAC/B;;;;;;;;;;;;;;;;;;;;ACnBwD;AACA;AAEN;AAOnD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IA2B5B,YAAoB,MAAc,EACd,KAAqB,EACrB,WAAwB;QAFxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QA3B5C,aAAQ,GAAgB;YACtB,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,YAAY,EAAE,EAAE;YAChB,KAAK,EAAE,EAAE;YACT,YAAY,EAAE,EAAE;YAChB,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;YACb,eAAe,EAAE,IAAI;YACrB,iBAAiB,EAAE,IAAI;YACvB,KAAK,EAAE,EAAE;YACT,SAAS,EAAE,EAAE;YACb,YAAY,EAAE,IAAI;YAClB,WAAW,EAAE,EAAE;SAChB,CAAC;QAIF,kBAAa,GAAG,QAAQ,CAAC;IAIuB,CAAC;IAEjD,QAAQ;QACN,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IAE1B,CAAC;IAED,cAAc,CAAC,EAAU;QACrB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,CAAC;aAChC,SAAS,CAAC,CAAC,QAAqB,EAAE,EAAE;YACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAC9B,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAGD,MAAM;QAEF,2BAA2B;QAE3B,2CAA2C;QAC3C,8CAA8C;QAC9C,wBAAwB;QACxB,+CAA+C;QAC/C,iBAAiB;QACjB,wDAAwD;QACxD,UAAU;QACV,SAAS;QACT,uCAAuC;QAEvC,IAAI;IACR,CAAC;IAED,MAAM,CAAC,KAAY;QACjB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,MAAM,CAAC,KAAY;QACjB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;aAChD,SAAS,CAAC,CAAC,MAAe,EAAE,EAAE;YAC7B,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;aAC3C;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,0BAA0B,CAAC;aAChD;QACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACjC,CAAC;CAEF;;YAvD6B,sDAAM;YACP,8DAAc;YACR,8DAAW;;AA7BjC,iBAAiB;IAJ7B,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,6NAAwC;KACzC,CAAC;GACW,iBAAiB,CAkF7B;AAlF6B;;;;;;;;;;;;;;;;;;;ACVa;AAGc;AAKzD,IAAa,WAAW,GAAxB,MAAa,WAAW;IAStB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAJvD,IAAI,UAAU;QACX,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;IAC3B,CAAC;IAID,KAAK,CAAC,QAAgB,EAAE,QAAgB;QACtC,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,EAAE;YAC1B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,yCAAyC,CAAC,CAAC;YAC1E,OAAO;SACR;QACD,IAAI,QAAQ,KAAK,OAAO,IAAI,QAAQ,KAAK,OAAO,EAAE;YAChD,IAAI,CAAC,SAAS,GAAG;gBACf,EAAE,EAAE,CAAC;gBACL,QAAQ;gBACR,OAAO,EAAE,IAAI;aAEd,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;YAC9C,OAAO;SACR;aAAM,IAAI,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;YACrD,IAAI,CAAC,WAAW,GAAG;gBACjB,EAAE,EAAE,CAAC;gBACL,QAAQ;gBACR,OAAO,EAAE,KAAK;aACf,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,IAAI,CAAC,WAAW,CAAC,QAAQ,YAAY,CAAC,CAAC;SAChF;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;SACjD;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;CACF;;YAhCqC,oEAAc;;AATvC,WAAW;IAHvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAyCvB;AAzCuB;;;;;;;;;;;;;;;;;;;;;;;;ACRqC;AAE7D,+EAA+E;AAC/E,uEAAuE;AACvE,kCAAkC;AAC4C;AAEjC;AACa;AACxB;AACiB;AACiC;AAcpF,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,+FAA2B;IAEzD,4GAA4G;IAC5G,YAAqC,YAAwB;QAC3D,KAAK,CAAC,YAAY,CAAC,CAAC;IACtB,CAAC;CAEF;;YAJoD,UAAU,uBAA/C,sDAAQ,YAAI,sDAAQ;;AAHvB,UAAU;IAZtB,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,+BAA+B;YAC/B,qEAAgB;SAMjB;QACD,SAAS,EAAE,CAAE,yDAAW,EAAE,sEAAiB,EAAE,8CAAM,EAAE,+DAAc,CAAC;KACrE,CAAC;IAIc,+GAAQ,EAAE,GAAE,+GAAQ,EAAE;GAHzB,UAAU,CAOtB;AAPsB;AASvB,iCAAiC;AACjC,8DAA8D;AAC9D,kBAAkB;AAClB,uGAAuG;AAEvG,uCAAuC;AACvC,6DAA6D;AAC7D,wCAAwC;AACxC,sCAAsC;AACtC,wBAAwB;AAExB,sDAAsD;AACtD,8CAA8C;AAC9C,+CAA+C;AAC/C,kEAAkE;AAClE,eAAe;AACf,WAAW;AACX,oBAAoB;AACpB,OAAO;AAEP,sCAAsC;AACtC,2DAA2D;AAC3D,2BAA2B;AAC3B,0BAA0B;AAC1B,2DAA2D;AAC3D,WAAW;AACX,OAAO;AACP,IAAI;;;;;;;;;;;;;;;;;;;AC7DuC;AACoB;AAG/D,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE1B,MAAM,CAAC,UAAiB,EAAE,gBAA0B,EAAE,UAAkB;QACpE,IAAI,UAAU,IAAI,gBAAgB,IAAI,UAAU,EAAE;YAC9C,UAAU,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;YACtC,MAAM,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBACtC,IAAI,KAAK,GAAG,KAAK,CAAC;gBAClB,KAAK,MAAM,IAAI,IAAI,gBAAgB,EAAE;oBACjC,IAAI,OAAO,GAAQ,EAAE,CAAC;oBAEtB,kDAAkD;oBAClD,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;wBACxB,OAAO,GAAG,0EAAgB,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;wBAC/C,IAAI,OAAO,EAAE;4BACT,OAAO,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;yBAC9C;qBACJ;yBAAM;wBACH,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;4BACZ,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;yBACjD;qBACJ;oBAED,IAAI,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE;wBAClC,KAAK,GAAG,IAAI,CAAC;wBACb,MAAM;qBACT;iBACJ;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC,CAAC;YACH,OAAO,QAAQ,CAAC;SACnB;aAAM;YACH,OAAO,UAAU,CAAC;SACrB;IACL,CAAC;CAEJ;AAnCY,iBAAiB;IAD7B,gEAAU,EAAE;GACA,iBAAiB,CAmC7B;AAnC6B;;;;;;;;;;;;;;;;;;;;;;ACJa;AAE3C,+EAA+E;AAC/E,+DAA+D;AAC/D,kCAAkC;AACiD;AAE3B;AACP;AAKR;AAGzC,IAAa,WAAW,GAAxB,MAAa,WAAW;IAOpB,YAAoB,IAAgB,EAChB,MAAc;QADd,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QANlC,YAAO,GAAG,gBAAgB,CAAC;QAC3B,kBAAa,GAAG,aAAa,CAAC;QAC9B,mBAAc,GAAG,eAAe,CAAC;QACjC,yBAAoB,GAAG,aAAa,CAAC;IAKrC,CAAC;IAED,YAAY;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,OAAO,CAAC;aAC1C,IAAI,CACE,0DAAG,CAAC,CAAC,SAAsB,EAAE,EAAE;YAC3B,IAAI,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC;YAC7C,OAAO,SAAS,CAAC;QACrB,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC9B,CAAC;IACd,CAAC;IAED,gBAAgB,CAAC,IAAY,EAAE,QAAgB;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,IAAI,CAAC,OAAO,SAAS,IAAI,IAAI,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACjG,IAAI,CACG,0DAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACR,4FAA4F;YAC5F,MAAM,YAAY,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YACvD,MAAM,SAAS,GAAG,GAAG,CAAC,IAAmB,CAAC;YAC1C,IAAI,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC;YAC7C,OAAO;gBACH,OAAO,EAAE,SAAS;gBAClB,YAAY;aACf,CAAC;QACN,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC/B,CAAC;IACd,CAAC;IAED,WAAW,CAAC,EAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC;aACnD,IAAI,CACD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC/B,CAAC;IACV,CAAC;IAED,cAAc,CAAC,QAAmB;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAoB,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC;aAC3D,IAAI,CACE,0DAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;YACrD,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC9B,CAAC;IACd,CAAC;IAED,cAAc,CAAC,QAAmB;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC;aAC/E,IAAI,CACE,0DAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;YACrD,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC9B,CAAC;IACd,CAAC;IAED,cAAc,CAAC,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAU,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC;aACpD,IAAI,CACD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC/B,CAAC;IACV,CAAC;IAED,SAAS;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,aAAa,CAAC;aAC7C,IAAI,CACD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC/B,CAAC;IACV,CAAC;IAED,8EAA8E;IAC9E,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,cAAc,CAAC;aACjD,IAAI,CACH,0DAAG,CAAC,CAAC,QAAmB,EAAE,EAAE;YACxB,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACR,CAAC;IAEC,UAAU,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,cAAc,GAAG,GAAG,GAAG,EAAE,CAAC;aAC1D,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAGD,aAAa,CAAC,OAAgB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,cAAc,GAAG,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC;aACrF,IAAI,CACH,0DAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;YAC/C,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,aAAa,CAAC,OAAgB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAmB,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC;aAClE,IAAI,CACH,0DAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;YAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAU,IAAI,CAAC,cAAc,GAAG,GAAG,GAAG,EAAE,CAAC;aAC7D,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IACD,oFAAoF;IACpF,4BAA4B,CAAC,SAAsB;QAC/C,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;YAC9B,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;gBAC7B,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,KAAK,MAAM,KAAK,IAAI,QAAQ,CAAC,MAAM,EAAE;oBACjC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;iBAC3C;gBACD,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC;aAC/B;SACJ;IACL,CAAC;IACD,iBAAiB;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,oBAAoB,CAAC;aAC3D,IAAI,CACH,0DAAG,CAAC,CAAC,YAA2B,EAAE,EAAE;YAClC,OAAO,YAAY,CAAC;QACtB,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,cAAc,CAAC,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,oBAAoB,GAAG,GAAG,GAAG,EAAE,CAAC;aACtE,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,yCAAyC;IACzC,iBAAiB,CAAC,QAAuB;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAsB,IAAI,CAAC,oBAAoB,EAAE,QAAQ,CAAC;aAC5E,IAAI,CACH,0DAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACR,CAAC;IAED,iBAAiB,CAAC,EAAU;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAU,IAAI,CAAC,oBAAoB,GAAG,GAAG,GAAG,EAAE,CAAC;aACnE,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,iBAAiB;IACT,WAAW,CAAC,KAAwB;QACxC,OAAO,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;QACtC,IAAI,KAAK,CAAC,KAAK,YAAY,KAAK,EAAE;YAChC,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;YACvC,OAAO,uDAAU,CAAC,UAAU,CAAC,CAAC;YAC9B,iDAAiD;YACjD,iEAAiE;SAClE;QACD,OAAO,uDAAU,CAAC,KAAK,IAAI,sBAAsB,CAAC,CAAC;IACvD,CAAC;CAEJ;;YAzL6B,+DAAU;YACR,sDAAM;;AARzB,WAAW;IADvB,gEAAU,EAAE;GACA,WAAW,CAgMvB;AAhMuB;;;;;;;;;;;;;;;;;;AChBmB;AAK3C,IAAa,cAAc,GAA3B,MAAa,cAAc;IAH3B;QAIU,cAAS,GAAa,EAAE,CAAC;QACjC,gBAAW,GAAG,KAAK,CAAC;IAUtB,CAAC;IARC,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,UAAU,CAAC,OAAe;QACxB,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,GAAG,MAAM,GAAG,WAAW,CAAC,cAAc,EAAE,CAAC,CAAC;IACzE,CAAC;CACF;AAZY,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAY1B;AAZ0B;;;;;;;;;;;;;;;;;;;ACLgB;AACoB;AAG/D,IAAa,MAAM,GAAnB,MAAa,MAAM;IADnB;QAGA,aAAQ,GAAW,IAAI,CAAC;QACxB,cAAS,GAAG,CAAC,CAAC;IAqCd,CAAC;IAnCG,IAAI,CAAC,UAAiB,EAAE,IAAS;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEpE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE;YAC/B,IAAI,IAAS,CAAC;YACd,IAAI,IAAS,CAAC;YAEd,0EAA0E;YAC1E,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;gBAClC,IAAI,GAAG,0EAAgB,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACzC,IAAI,GAAG,0EAAgB,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aAC1C;iBAAM;gBACL,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBACf,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;aAChB;YAED,sFAAsF;YACtF,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBAAE,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;aAAE;YAC9D,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBAAE,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;aAAE;YAE9D,IAAI,IAAI,KAAK,IAAI,EAAE;gBACf,OAAO,CAAC,CAAC;aACZ;iBAAM,IAAI,IAAI,GAAG,IAAI,EAAE;gBACpB,OAAO,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;aAC9B;iBAAM;gBACH,OAAO,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;aAC7B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ,CAAC,GAAQ;QACf,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,YAAY,MAAM,CAAC,CAAC,CAAC;IACrE,CAAC;CAEJ;AAxCY,MAAM;IADlB,gEAAU,EAAE;GACA,MAAM,CAwClB;AAxCkB;;;;;;;;;;;;;;;;;;ACJwB;AAK3C,IAAa,cAAc,GAA3B,MAAa,cAAc;IAEzB,QAAQ,CAAC,KAAa,EAAE,QAAmB;QACzC,OAAO,QAAQ,CAAC,GAAG,CAAC;IACtB,CAAC;IAED,OAAO,CAAC,KAAa,EAAE,OAAgB;QACrC,OAAO,OAAO,CAAC,GAAG,CAAC;IACrB,CAAC;CACF;AATY,cAAc;IAD1B,gEAAU,EAAE;GACA,cAAc,CAS1B;AAT0B;;;;;;;;;;;;;;;;;;;;;;ACLuB;AACO;AACW;AAEjB;AAEc;AAMjE,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;IAiBxC,YAAoB,MAAc,EACd,KAAqB,EACrB,WAAwB,EACxB,WAAwB;QAHxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QAjB5C,aAAQ,GAAc;YACpB,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,EAAE;YACR,GAAG,EAAE,CAAC;SACP,CAAC;QAIF,kBAAa,GAAG,QAAQ,CAAC;IAKuB,CAAC;IAEjD,QAAQ;QACN,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACzC,IAAI,EAAE,KAAK,GAAG,EAAE;YACd,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;YAC9B,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACtB;QAED,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,WAAW,CAAC,EAAU;QAClB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC;aAC7B,SAAS,CAAC,CAAC,QAAmB,EAAE,EAAE;YACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACjC,CAAC;IAED,SAAS;QACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,SAAS,EAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1D,QAAQ,EAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzD,MAAM,EAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvD,KAAK,EAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,4EAAiB,CAAC,cAAc,CAAC,CAAC;YAC1F,OAAO,EAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxD,IAAI,EAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,OAAO,EAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACzD,CAAC,CAAC;IACP,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,MAAgB,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;IACrF,CAAC;IAED,MAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAwC;QAEzD,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;QAC9B,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC;QACnC,8BAA8B;QAC9B,4BAA4B;QAC5B,KAAK;QAEL,IAAI,KAAK,CAAC,GAAG,EAAE;YAEb,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,KAAK,CAAC;iBACnC,SAAS,CAAC,CAAC,QAAmB,EAAE,EAAE;gBACjC,IAAI,QAAQ,EAAE;oBACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;iBACtC;qBAAM;oBACL,IAAI,CAAC,YAAY,GAAG,yBAAyB,CAAC;iBAC/C;YACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SAE9B;aAAM;YAEL,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,KAAK,CAAC;iBACnC,SAAS,CAAC,CAAC,QAAmB,EAAE,EAAE;gBACjC,IAAI,QAAQ,EAAE;oBACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;iBACtC;qBAAM;oBACL,IAAI,CAAC,YAAY,GAAG,wBAAwB,CAAC;iBAC9C;YACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SAE9B;IACL,CAAC;IAED,MAAM,CAAC,KAAY;QACjB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,CAAC,KAAY;QACjB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;aAC7C,SAAS,CAAC,CAAC,MAAe,EAAE,EAAE;YAC7B,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;aACtC;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,2BAA2B,CAAC;aACjD;QACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACjC,CAAC;CAEF;;YA9F6B,sDAAM;YACP,8DAAc;YACR,8DAAW;YACX,0DAAW;;AApBjC,6BAA6B;IAJzC,+DAAS,CAAC;QACT,QAAQ,EAAE,4BAA4B;QACtC,yPAAsD;KACvD,CAAC;GACW,6BAA6B,CA+GzC;AA/GyC;;;;;;;;;;;;;;;;;;;;ACZQ;AACO;AAEN;AAOnD,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAgBhC,YAAoB,MAAc,EACd,KAAqB,EACrB,WAAwB;QAFxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QAhB5C,aAAQ,GAAc;YACpB,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,EAAE;YACR,GAAG,EAAE,CAAC;SACP,CAAC;QAIF,kBAAa,GAAG,QAAQ,CAAC;IAIuB,CAAC;IAEjD,QAAQ;QACN,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACzC,IAAI,EAAE,KAAK,GAAG,EAAE;YACd,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;YAC9B,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACtB;QAED,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,WAAW,CAAC,EAAU;QAClB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC;aAC7B,SAAS,CAAC,CAAC,QAAmB,EAAE,EAAE;YACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,MAAgB,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;IACrF,CAAC;IAED,MAAM;QAEF,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;YAErB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC;iBAC3C,SAAS,CAAC,CAAC,QAAmB,EAAE,EAAE;gBACjC,IAAI,QAAQ,EAAE;oBACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;iBACtC;qBAAM;oBACL,IAAI,CAAC,YAAY,GAAG,yBAAyB,CAAC;iBAC/C;YACH,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SAEnC;aAAM;YAEL,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC;iBAC3C,SAAS,CAAC,CAAC,QAAmB,EAAE,EAAE;gBACjC,IAAI,QAAQ,EAAE;oBACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;iBACtC;qBAAM;oBACL,IAAI,CAAC,YAAY,GAAG,wBAAwB,CAAC;iBAC9C;YACH,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SAEnC;IACL,CAAC;IAED,MAAM,CAAC,KAAY;QACjB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,CAAC,KAAY;QACjB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;aAC7C,SAAS,CAAC,CAAC,MAAe,EAAE,EAAE;YAC7B,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;aACtC;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,2BAA2B,CAAC;aACjD;QACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACjC,CAAC;CAEF;;YAzE6B,sDAAM;YACP,8DAAc;YACR,8DAAW;;AAlBjC,qBAAqB;IAJjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,uOAA6C;KAC9C,CAAC;GACW,qBAAqB,CAyFjC;AAzFiC;;;;;;;;;;;;;;;;;;;;ACVgD;AAG1C;AACiB;AAUzD,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAMjC,YAAoB,MAAc,EAAS,OAAuB;QAA9C,WAAM,GAAN,MAAM,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAgB;QAJlE,eAAU,GAAG,EAAE,CAAC;QAChB,gBAAW,GAAG,CAAC,CAAC;QACP,cAAS,GAAgB,EAAE,CAAC;IAEiC,CAAC;IAEvE,QAAQ;IAER,CAAC;IAED,IAAI,CAAC,IAAY;QACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;CAEF;;YAV6B,mDAAM;YAAkB,oEAAc;;AAFzD;IAAR,2DAAK,EAAE;yDAA6B;AAJ1B,sBAAsB;IARlC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,yOAA8C;QAC9C,uEAAuE;QACvE,oEAAoE;QACpE,gFAAgF;QAChF,eAAe,EAAE,qEAAuB,CAAC,MAAM;KAChD,CAAC;GACW,sBAAsB,CAgBlC;AAhBkC;;;;;;;;;;;;;;;;;;;;;ACde;AACT;AAEuB;AACb;AAQnD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAS7B,YAAoB,MAAc,EACd,WAAwB,EACxB,UAA6B;QAF7B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAmB;QARjD,cAAS,GAAgB,EAAE,CAAC;QAC5B,sBAAiB,GAAgB,EAAE,CAAC;QAEpC,iBAAY,GAAG,CAAC,CAAC;QACjB,aAAQ,GAAG,EAAE,CAAC;IAIuC,CAAC;IAEtD,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;QACzB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,aAAa,CAAC,UAAkB;QAC9B,IAAI,UAAU,IAAI,IAAI,CAAC,SAAS,EAAE;YAC9B,MAAM,KAAK,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;YACvF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;SACtF;aAAM;YACL,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;SACzC;IACH,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,gBAAgB,CAAC,IAAY;QAC3B,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC;aACvE,SAAS,CAAC,CAAC,QAAoC,EAAE,EAAE;YAClD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,OAAO,CAAC;YAC3D,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;QAC5C,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAC9B,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC,CAAC;IACnE,CAAC;CAEF;;YAhC6B,sDAAM;YACD,8DAAW;YACZ,2EAAiB;;AAXtC,kBAAkB;IAJ9B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,+NAAyC;KAC1C,CAAC;GACW,kBAAkB,CAyC9B;AAzC8B;;;;;;;;;;;;;;;;;;;;ACZW;AACD;AAEgB;AAQzD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAK3B,YAAoB,cAA8B,EAC9B,MAAc;QADd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IALvC,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;IACtC,CAAC;IAKD,KAAK;QACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,KAAK,EAAG,IAAI,EAAC,EAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,KAAK,CAAC;IAC1C,CAAC;CACF;;YAPqC,oEAAc;YACtB,sDAAM;;AANvB,gBAAgB;IAN5B,+DAAS,CAAC;QACT,yNAAuC;;KAIxC,CAAC;GACW,gBAAgB,CAY5B;AAZ4B;;;;;;;;;;;;;;;;;;;;;;ACXE;AACC;;;;;;;;;;;;;ACDhC;AAAe,8HAA+D,wDAAwD,GAAG,sBAAsB,uEAAuE,WAAW,aAAa,cAAc,YAAY,4EAA4E,8DAA8D,GAAG,qCAAqC,kBAAkB,qBAAqB,sEAAsE,GAAG,iCAAiC,wEAAwE,WAAW,aAAa,cAAc,YAAY,4DAA4D,kBAAkB,qFAAqF,GAAG,sBAAsB,uGAAuG,GAAG,+CAA+C,+tH;;;;;;;;;;;;;;;;;;ACAv8B;AAEpD;AAQ/C,IAAa,cAAc,GAA3B,MAAa,cAAc;IAIvB,YAAoB,YAA0B,EAAU,EAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,OAAE,GAAF,EAAE,CAAY;QAClE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC;IACpC,CAAC;IAED,QAAQ;QACJ,6BAA6B;QAC7B,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;YACvC,OAAO;SACV;QAED,oGAAoG;QACpG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAExC,kCAAkC;QAClC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;YACxC,IAAI,EAAE,CAAC,MAAM,CAAC,SAAS,KAAK,UAAU,EAAE;gBACpC,IAAI,CAAC,KAAK,EAAE,CAAC;aAChB;QACL,CAAC,CAAC,CAAC;QAEH,0FAA0F;QAC1F,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,6DAA6D;IAC7D,WAAW;QACP,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;IAC1B,CAAC;IAED,aAAa;IACb,IAAI;QACA,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QACrC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IACjD,CAAC;IAED,cAAc;IACd,KAAK;QACD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACpC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IACpD,CAAC;CACJ;;YA1CqC,2DAAY;YAAc,wDAAU;;AAH7D;IAAR,2DAAK,EAAE;0CAAY;AADX,cAAc;IAN1B,+DAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,mNAAmC;QAEnC,aAAa,EAAE,+DAAiB,CAAC,IAAI;;KACxC,CAAC;GACW,cAAc,CA8C1B;AA9C0B;;;;;;;;;;;;;;;;;;;;ACVc;AACM;AAEI;AAOnD,IAAa,WAAW,GAAxB,MAAa,WAAW;CAAI;AAAf,WAAW;IALvB,8DAAQ,CAAC;QACN,OAAO,EAAE,CAAC,4DAAY,CAAC;QACvB,YAAY,EAAE,CAAC,+DAAc,CAAC;QAC9B,OAAO,EAAE,CAAC,+DAAc,CAAC;KAC5B,CAAC;GACW,WAAW,CAAI;AAAJ;;;;;;;;;;;;;;;;;;ACVmB;AAG3C,IAAa,YAAY,GAAzB,MAAa,YAAY;IADzB;QAEY,WAAM,GAAU,EAAE,CAAC;IAuB/B,CAAC;IArBG,GAAG,CAAC,KAAU;QACV,sCAAsC;QACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,MAAM,CAAC,EAAU;QACb,2CAA2C;QAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACvD,CAAC;IAED,IAAI,CAAC,EAAU;QACX,6BAA6B;QAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QACjD,KAAK,CAAC,IAAI,EAAE,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,EAAU;QACZ,8BAA8B;QAC9B,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QACjD,KAAK,CAAC,KAAK,EAAE,CAAC;IAClB,CAAC;CACJ;AAxBY,YAAY;IADxB,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;GACtB,YAAY,CAwBxB;AAxBwB;;;;;;;;;;;;;;;;;;;;;ACHyB;AACO;AAEN;AAEA;AAMnD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAmB/B,YAAoB,MAAc,EACd,KAAqB,EACrB,WAAwB,EACxB,WAAwB;QAHxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QAjB5C,YAAO,GAAY;YACjB,eAAe,EAAE,EAAE;YACnB,iBAAiB,EAAE,EAAE;YACrB,eAAe,EAAE,CAAC;YAClB,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,EAAE;SACb,CAAC;QAIF,kBAAa,GAAG,QAAQ,CAAC;IAKuB,CAAC;IApBjD,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;IACrC,CAAC;IAoBD,QAAQ;QACN,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACzC,IAAI,EAAE,KAAK,GAAG,EAAE;YACd,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;gBACxB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;aAC/B;iBAAM;gBACL,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;aACnC;YAED,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SACrB;IAEH,CAAC;IAED,UAAU,CAAC,EAAU;QACjB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;aAC5B,SAAS,CAAC,CAAC,OAAgB,EAAE,EAAE;YAC9B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACtC,CAAC;IAGD,MAAM;QAEF,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;YAEpB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;iBACzC,SAAS,CAAC,CAAC,OAAgB,EAAE,EAAE;gBAC9B,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;iBACrC;qBAAM;oBACL,IAAI,CAAC,YAAY,GAAG,wBAAwB,CAAC;iBAC9C;YACH,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SAEnC;aAAM;YAEL,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;iBACzC,SAAS,CAAC,CAAC,OAAgB,EAAE,EAAE;gBAC9B,IAAI,OAAO,EAAE;oBACX,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;oBACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;iBACrC;qBAAM;oBACL,IAAI,CAAC,YAAY,GAAG,uBAAuB,CAAC;iBAC7C;YACH,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SAEnC;IACL,CAAC;IAED,MAAM,CAAC,KAAY;QACjB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,MAAM,CAAC,KAAY;QACjB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;aAC3C,SAAS,CAAC,CAAC,MAAe,EAAE,EAAE;YAC7B,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,0BAA0B,CAAC;aAChD;QACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACjC,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;YACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;SAChE;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,4BAA4B,CAAC;SAClD;IACH,CAAC;CAGF;;YAtF6B,sDAAM;YACP,8DAAc;YACR,8DAAW;YACX,8DAAW;;AAtBjC,oBAAoB;IAJhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,oOAA4C;KAC7C,CAAC;GACW,oBAAoB,CAyGhC;AAzGgC;;;;;;;;;;;;;;;;;;;;;ACXiD;AAG1C;AACiB;AACN;AAUnD,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAUhC,YAAoB,MAAc,EACf,OAAuB,EACtB,WAAwB;QAFxB,WAAM,GAAN,MAAM,CAAQ;QACf,YAAO,GAAP,OAAO,CAAgB;QACtB,gBAAW,GAAX,WAAW,CAAa;QATnC,WAAM,GAAG,CAAC,CAAC;QACX,aAAQ,GAAc,EAAE,CAAC;IAQc,CAAC;IANjD,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;IACrC,CAAC;IAOD,QAAQ;IAER,CAAC;IAED,IAAI,CAAC,IAAY;QACX,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC;CAEJ;;YAb6B,mDAAM;YACN,oEAAc;YACT,8DAAW;;AATnC;IAAR,2DAAK,EAAE;qDAAY;AACX;IAAR,2DAAK,EAAE;uDAA0B;AAJvB,qBAAqB;IARjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,sOAA6C;QAC7C,uEAAuE;QACvE,oEAAoE;QACpE,iDAAiD;QACjD,eAAe,EAAE,qEAAuB,CAAC,MAAM;KAChD,CAAC;GACW,qBAAqB,CAuBjC;AAvBiC;;;;;;;;;;;;;;;;;;;;;;ACfgB;AACT;AAEuB;AACb;AACA;AAMnD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAY5B,YAAoB,MAAc,EACd,WAAwB,EACxB,UAA6B,EAC7B,WAAwB;QAHxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAmB;QAC7B,gBAAW,GAAX,WAAW,CAAa;QAZrC,aAAQ,GAAc,EAAE,CAAC;QACzB,WAAM,GAAG,EAAE,CAAC;QACnB,qBAAgB,GAAc,EAAE,CAAC;QAEjC,iBAAY,GAAG,CAAC,CAAC;QACjB,aAAQ,GAAG,EAAE,CAAC;IAOkC,CAAC;IANjD,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;IACrC,CAAC;IAMD,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,aAAa,CAAC,UAAkB;QAE9B,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC7B,MAAM,KAAK,GAAG,CAAC,aAAa,EAAE,aAAa,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;YAC/F,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;SACpF;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC;SACvC;IACH,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;aAC7B,SAAS,CAAC,CAAC,QAAmB,EAAE,EAAE;YACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClD,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAC9B,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC,CAAC;IAExD,CAAC;IAED,aAAa;QACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE;YAC9C,IAAK,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;aAE5B;SACF;IACH,CAAC;CACF;;YA5C6B,sDAAM;YACD,8DAAW;YACZ,2EAAiB;YAChB,8DAAW;;AAfjC,iBAAiB;IAJ7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,4NAAwC;KACzC,CAAC;GACW,iBAAiB,CAwD7B;AAxD6B;;;;;;;;;;;;;;;;;ACXvB,MAAM,2BAA2B;IAEtC,YAAY,YAAiB;QAC3B,IAAI,YAAY,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,GAAG,YAAY,CAAC,WAAW,CAAC,IAAI,qEAAqE,CAAC,CAAC;SACxH;IACH,CAAC;CAEF;;;;;;;;;;;;;;;;;;ACR+D;AAehE,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAbnC;QAgBI,UAAK,GAAuB,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QAG7C,YAAO,GAAyB,IAAI,0DAAY,EAAU,CAAC;IAM/D,CAAC;IAJG,aAAa,CAAC,KAAU;QACtB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,sBAAsB;IAC9D,CAAC;CACJ;AANG;IADC,4DAAM,EAAE;uDACkD;AANlD,sBAAsB;IAblC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,QAAQ,EAAE;;;;;;;;;GAST;KACF,CAAC;GACW,sBAAsB,CAYlC;AAZkC;;;;;;;;;;;;;ACfnC;AAAe,2OAA4K,8BAA8B,0BAA0B,GAAG,mBAAmB,sBAAsB,GAAG,6CAA6C,2rB;;;;;;;;;;;;;;;;;ACAhQ;AAQ/E,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAgC9B;QA1BA,UAAK,GAAa,EAAE,CAAC;QACrB,gBAAW,GAAG,CAAC,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAClB,oBAAe,GAAG,KAAK,CAAC;QACxB,gBAAW,GAAG,IAAI,CAAC;QAoBT,gBAAW,GAAyB,IAAI,0DAAY,EAAE,CAAC;IAEjD,CAAC;IApBR,IAAI,QAAQ;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,IAAI,QAAQ,CAAC,IAAY;QACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEQ,IAAI,UAAU;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,IAAI,UAAU,CAAC,SAAiB;QAC9B,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QACjC,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAMD,QAAQ;IAER,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,aAAa,EAAE;YAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;YAClE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC5C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACpB;aACF;YACD,OAAO;SACR;QAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,YAAY,CAAC,SAAiB,EAAE,KAAkB;QAChD,IAAI,IAAI,GAAW,IAAI,CAAC,WAAW,CAAC;QACpC,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;YAClB,IAAI,IAAI,GAAG,CAAC,EAAE;gBAAE,IAAI,EAAE,CAAC;aAAE;SAC5B;aAAM;YACH,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE;gBAAE,IAAI,EAAE,CAAC;aAAE;SAC1C;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED,UAAU,CAAC,IAAY,EAAE,KAAkB;QACzC,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;QACD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;YAAE,OAAO;SAAE;QAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;QACtD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;CAEF;AA9DU;IAAR,2DAAK,EAAE;mDAEP;AAOQ;IAAR,2DAAK,EAAE;qDAEP;AAOS;IAAT,4DAAM,EAAE;wDAAwD;AA9BtD,mBAAmB;IAN/B,+DAAS,CAAC;QACR,QAAQ,EAAE,gBAAgB;QAC3B,yOAA0C;;KAE3C,CAAC;GAEW,mBAAmB,CA0E/B;AA1E+B;;;;;;;;;;;;;;;;;;ACRoB;AAGpD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAEzB,SAAS,CAAC,KAAU;QACnB,IAAI,KAAK,EAAE;YACP,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACzD;QACD,OAAO,KAAK,CAAC;IACd,CAAC;CAEF;AATY,cAAc;IAD1B,0DAAI,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;GAChB,cAAc,CAS1B;AAT0B;;;;;;;;;;;;;;;;;;ACHuB;AAGlD,IAAa,QAAQ,GAArB,MAAa,QAAQ;IACnB,SAAS,CAAC,KAAU;QAClB,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,EAAE,CAAC;SACX;QACD,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;CACF;AAPY,QAAQ;IADpB,0DAAI,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;GACR,QAAQ,CAOpB;AAPoB;;;;;;;;;;;;;;;;;ACHd,MAAM,gBAAgB;IACxB,MAAM,CAAC,OAAO,CAAC,IAAY,EAAE,GAAQ;QACpC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;YACzC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAC1C,CAAC,EAAE,GAAG,IAAI,IAAI,CAAC;IACjB,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;;;ACNwC;AACM;AACmB;AAEM;AACf;AACZ;AACsC;AAOnF,IAAa,YAAY,GAAzB,MAAa,YAAY;CAAI;AAAhB,YAAY;IALxB,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAE,4DAAY,EAAE,0DAAW,EAAE,kEAAmB,CAAE;QAC3D,YAAY,EAAE,CAAC,qEAAc,EAAE,yDAAQ,EAAE,+FAAsB,EAAE,oFAAmB,CAAE;QACtF,OAAO,EAAE,CAAE,4DAAY,EAAE,0DAAW,EAAE,kEAAmB,EAAE,qEAAc,EAAE,yDAAQ,EAAE,+FAAsB,EAAE,oFAAmB,CAAE;KACnI,CAAC;GACW,YAAY,CAAI;AAAJ;;;;;;;;;;;;;;;;;ACXlB,MAAM,iBAAiB;IAE1B,MAAM,CAAC,wBAAwB,CAAC,IAAY;QACxC,IAAI,MAAM,GAAG;YACT,UAAU,EAAE,UAAU;YACtB,mBAAmB,EAAE,+BAA+B;YACpD,qBAAqB,EAAE,uBAAuB;YAC9C,iBAAiB,EAAE,sFAAsF;SAC5G,CAAC;QACF,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAED,MAAM,CAAC,mBAAmB,CAAC,OAAwB;QAC/C,iEAAiE;QACjE,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,uJAAuJ,CAAC,EAAE;YAC9K,OAAO,IAAI,CAAC;SACf;aAAM;YACH,OAAO,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC;SACxC;IACL,CAAC;IAED,MAAM,CAAC,cAAc,CAAC,OAAwB;QAC1C,2BAA2B;QAC3B,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,uIAAuI,CAAC,EAAE;YAC9J,OAAO,IAAI,CAAC;SACf;aAAM;YACH,OAAO,EAAE,qBAAqB,EAAE,IAAI,EAAE,CAAC;SAC1C;IACL,CAAC;IAED,MAAM,CAAC,iBAAiB,CAAC,OAAwB;QAC7C,sEAAsE;QACtE,8DAA8D;QAC9D,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,yCAAyC,CAAC,EAAE;YAChE,OAAO,IAAI,CAAC;SACf;aAAM;YACH,OAAO,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC;SACtC;IACL,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AC1CyC;AAED;AAEU;AAKnD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAIzB,YAAoB,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAHlC,cAAS,GAAG,QAAQ,CAAC;IAGiB,CAAC;IAEvC,KAAK,CAAC,SAAiB;QACrB,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE;YAChC,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC/C,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC/C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAE3C,kEAAkE;YAClE,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;gBAChC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;aACzD;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;SAEF;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,wCAAwC,CAAC;SAC9D;IACH,CAAC;CACF;;YApBkC,8DAAW;YAChB,sDAAM;;AALvB,cAAc;IAH1B,+DAAS,CAAC;QACT,kNAAqC;KACtC,CAAC;GACW,cAAc,CAwB1B;AAxB0B;;;;;;;;;;;;;;;;;;;ACTuB;AACX;AAMvC,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAI3B,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAFvC,cAAS,GAAG,4CAA4C,CAAC;IAEd,CAAC;IAEnD,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAC;IACpC,CAAC;IAID,SAAS,CAAC,EAAU;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;CACF;;YAfmC,mDAAY;;AAJnC,gBAAgB;IAJ5B,+DAAS,CAAC;QACT,yNAAuC;KACxC,CAAC;GAEW,gBAAgB,CAmB5B;AAnB4B;;;;;;;;;;;;;ACP7B;AAAA;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;;AAEzE,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<span class=\\\"fa fa-spinner spinner\\\" *ngIf=\\\"!loading\\\"></span>\\r\\n<nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\r\\n  <a class=\\\"navbar-brand\\\">{{ pageTitle }}</a>\\r\\n  <ul class=\\\"navbar-nav\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\"\\r\\n         [routerLink]=\\\"['/welcome']\\\"\\r\\n         routerLinkActive=\\\"active\\\">Home</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\"\\r\\n          [routerLink]=\\\"['/products']\\\"\\r\\n          routerLinkActive=\\\"active\\\">Products</a>\\r\\n    </li>\\r\\n     <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\"\\r\\n         [routerLink]=\\\"['/contactus']\\\"\\r\\n         routerLinkActive=\\\"active\\\"\\r\\n         [routerLinkActiveOptions]=\\\"{ exact : true}\\\">Contact Us</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\"\\r\\n        *ngIf=\\\"isLoggedIn\\\"\\r\\n        [routerLink]=\\\"['/contactus-list']\\\"\\r\\n        routerLinkActive = \\\"active\\\"\\r\\n        [routerLinkActiveOptions] =\\\"{ exact: true }\\\">Customer List</a>\\r\\n    </li>\\r\\n\\r\\n    <!-- <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\"\\r\\n         [routerLink]=\\\"['/products', 0, 'edit']\\\"\\r\\n         *ngIf='isLoggedIn'\\r\\n         routerLinkActive=\\\"active\\\">Add Product</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n  <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n    <li class=\\\"nav-item\\\"\\r\\n        *ngIf=\\\"isLoggedIn\\\">\\r\\n      <a class=\\\"nav-link\\\"\\r\\n      routerLinkActive=\\\"active\\\">Welcome {{ userName }}</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\"\\r\\n        *ngIf=\\\"!isMessageDisplayed\\\">\\r\\n      <a class=\\\"nav-link\\\"\\r\\n       (click) =\\\"displayMessage()\\\">Show Messages</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\"\\r\\n        *ngIf=\\\"isMessageDisplayed\\\">\\r\\n        <a class=\\\"nav-link\\\"\\r\\n         (click) =\\\"hideMessage()\\\">Hide Messages</a>\\r\\n      </li> -->\\r\\n    <li class=\\\"nav-item\\\"\\r\\n        *ngIf=\\\"!isLoggedIn\\\">\\r\\n      <a class=\\\"nav-link\\\"\\r\\n         [routerLink]=\\\"['/login']\\\"\\r\\n         routerLinkActive=\\\"active\\\">Log In</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\"\\r\\n        *ngIf=\\\"isLoggedIn\\\">\\r\\n      <a class=\\\"nav-link\\\"\\r\\n      [routerLink]=\\\"['/welcome']\\\"\\r\\n         (click)=\\\"logOut()\\\">Log Out</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n</nav>\\r\\n<div class=\\\"card-container mx-auto\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div  class=\\\"col-md-12\\\"\\r\\n          [@slideInAnimation] = \\\"o.isActivated ? o.activatedRoute: ''\\\">\\r\\n      <router-outlet #o=\\\"outlet\\\"></router-outlet>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <router-outlet name=\\\"popup\\\"></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"col-md-12\\\">\\r\\n  <div class=\\\"table\\\">\\r\\n      <table class=\\\"table table-striped table-hover\\\">\\r\\n          <thead>\\r\\n              <tr>\\r\\n                  <th\\r\\n                  (click)=\\\"sort('firstName')\\\">Full Name</th>\\r\\n                  <th\\r\\n                  (click)=\\\"sort('email')\\\">Email Address</th>\\r\\n                  <th\\r\\n                  (click)=\\\"sort('phone')\\\">Phone</th>\\r\\n                  <th\\r\\n                  (click)=\\\"sort('servings')\\\">Servings</th>\\r\\n                  <th\\r\\n                  (click)=\\\"sort('occassion')\\\">Occassion</th>\\r\\n                  <th\\r\\n                  (click)=\\\"sort('dateOfOccassion')\\\">Date of Occassion</th>\\r\\n                  <th\\r\\n                  (click)=\\\"sort('dateOfApplication')\\\">Date of Application</th>\\r\\n                  <th\\r\\n                  (click)=\\\"sort('theme')\\\">Theme</th>\\r\\n              </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n              <tr *ngFor=\\\"let customer of customerList;\\r\\n                        trackBy:trackby.customer\\\">\\r\\n                  <td><a [routerLink]=\\\"['/contactus',customer._id]\\\">\\r\\n                    {{ customer.firstName | capitalize }}  {{ customer.lastName | capitalize}}</a>\\r\\n                  </td>\\r\\n                  <td>{{ customer.email }}</td>\\r\\n                  <td>{{ customer.phone }}</td>\\r\\n\\r\\n                  <td>{{ customer.servings }}</td>\\r\\n                  <td>{{ customer.occassion }}</td>\\r\\n                  <td>{{ customer.dateOfOccassion | date: 'mediumDate' }}</td>\\r\\n                  <td>{{ customer.dateOfApplication | date: 'mediumDate' }}</td>\\r\\n                  <td>{{ customer.theme }}</td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"!customerList.length\\\">\\r\\n                  <td>&nbsp;</td>\\r\\n                  <td colspan=\\\"6\\\">{{ customerList.length}} records were found</td>\\r\\n              </tr>\\r\\n          </tbody>\\r\\n      </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n              {{ title }}\\r\\n  </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"search-bar\\\">\\r\\n                  <app-filter-textbox (changed)=\\\"filterChanged($event)\\\"></app-filter-textbox>\\r\\n            </div>\\r\\n\\r\\n      <app-customer-grid [customerList]=\\\"filteredCustomers\\\"></app-customer-grid>\\r\\n    </div>\\r\\n      <app-pagination [totalItems]=\\\"totalRecords\\\"\\r\\n          [pageSize]=\\\"pageSize\\\"\\r\\n          (pageChanged)=\\\"pageChanged($event)\\\"></app-pagination>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Contact Us\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n    <form\\n      novalidate\\n      (ngSubmit)=\\\"save()\\\"\\n      [formGroup]=\\\"contactUsForm\\\"\\n      class=\\\"col-md-12\\\"\\n    >\\n      <div class=\\\"form-group row mb-2\\\">\\n        <label class=\\\"col-md-3 col-form-label\\\" for=\\\"firstNameId\\\"\\n          >First Name</label\\n        >\\n        <div class=\\\"col-md-8\\\">\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"firstNameId\\\"\\n            type=\\\"text\\\"\\n            placeholder=\\\"First Name (required)\\\"\\n            formControlName=\\\"firstName\\\"\\n            [ngClass]=\\\"{\\n              'is-invalid':\\n                (contactUsForm.get('firstName').touched ||\\n                  contactUsForm.get('firstName').dirty) &&\\n                !contactUsForm.get('firstName').valid\\n            }\\\"\\n          />\\n          <span class=\\\"invalid-feedback\\\">\\n            <span *ngIf=\\\"!!contactUsForm.get('firstName').errors?.required\\\">\\n              Please enter your first name.\\n            </span>\\n            <span *ngIf=\\\"!!contactUsForm.get('firstName').errors?.minlength\\\">\\n              The first name must be longer than 3 characters.\\n            </span>\\n          </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row mb-2\\\">\\n        <label class=\\\"col-md-3 col-form-label\\\" for=\\\"lastNameId\\\"\\n          >Last Name</label\\n        >\\n        <div class=\\\"col-md-8\\\">\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"lastNameId\\\"\\n            type=\\\"text\\\"\\n            placeholder=\\\"Last Name (required)\\\"\\n            formControlName=\\\"lastName\\\"\\n            [ngClass]=\\\"{\\n              'is-invalid':\\n                (contactUsForm.get('lastName').touched ||\\n                  contactUsForm.get('lastName').dirty) &&\\n                !contactUsForm.get('lastName').valid\\n            }\\\"\\n          />\\n          <span class=\\\"invalid-feedback\\\">\\n            <span *ngIf=\\\"!!contactUsForm.get('lastName').errors?.required\\\">\\n              Please enter your last name.\\n            </span>\\n            <span *ngIf=\\\"!!contactUsForm.get('lastName').errors?.maxlength\\\">\\n              The last name must be less than 50 characters.\\n            </span>\\n          </span>\\n        </div>\\n      </div>\\n      <!-- label and input for email notification -->\\n      <div class=\\\"form-group row mb-2\\\">\\n        <label class=\\\"col-md-3 col-form-label\\\" for=\\\"emailId\\\">Email</label>\\n        <div class=\\\"col-md-8\\\">\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"emailId\\\"\\n            type=\\\"email\\\"\\n            placeholder=\\\"Email (required)\\\"\\n            required\\n            email\\n            formControlName=\\\"email\\\"\\n            [ngClass]=\\\"{ 'is-invalid': emailMessage }\\\"\\n          />\\n          <span class=\\\"invalid-feedback\\\">\\n            {{ emailMessage }}\\n          </span>\\n        </div>\\n      </div>\\n      <!-- label and input for confirm email -->\\n      <!-- <div class=\\\"form-group row mb-2\\\">\\n          <label class=\\\"col-md-3 col-form-label\\\" for=\\\"confirmEmailId\\\"\\n            >Confirm Email</label\\n          >\\n          <div class=\\\"col-md-8\\\">\\n            <input\\n              class=\\\"form-control\\\"\\n              id=\\\"confirmEmailId\\\"\\n              type=\\\"email\\\"\\n              placeholder=\\\"Confirm Email (required)\\\"\\n              formControlName=\\\"confirmEmail\\\"\\n              [ngClass]=\\\"{ 'is-invalid': confirmEmailMessage }\\\"\\n            />\\n            <span class=\\\"invalid-feedback\\\">\\n              {{ confirmEmailMessage }}\\n            </span>\\n          </div>\\n        </div> -->\\n\\n      <!-- Label and input for phone number -->\\n      <div class=\\\"form-group row mb-2\\\">\\n        <label class=\\\"col-md-3 col-form-label\\\" for=\\\"phoneId\\\"\\n          >Mobile Number</label\\n        >\\n        <div class=\\\"col-md-8\\\">\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"phoneId\\\"\\n            type=\\\"tel\\\"\\n            type=\\\"number\\\"\\n            placeholder=\\\"Ex: 70 XXXXXX or 03 XXXXXX\\\"\\n            formControlName=\\\"phone\\\"\\n            [ngClass]=\\\"{ 'is-invalid': !contactUsForm.get('phone').valid }\\\"\\n          />\\n          <span class=\\\"invalid-feedback\\\">\\n            <span *ngIf=\\\"!!contactUsForm.get('phone').errors?.required\\\">\\n              Please enter your phone number\\n            </span>\\n          </span>\\n        </div>\\n      </div>\\n      <!-- Label and input for notification -->\\n      <div class=\\\"form-group row mb-2\\\">\\n        <label class=\\\"col-md-3 col-form-label\\\">Preferred Contact Method</label>\\n        <div class=\\\"col-md-8\\\">\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                type=\\\"radio\\\"\\n                value=\\\"email\\\"\\n                formControlName=\\\"notification\\\"\\n              />\\n              Email\\n            </label>\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                type=\\\"radio\\\"\\n                value=\\\"text\\\"\\n                formControlName=\\\"notification\\\"\\n              />\\n              Text\\n            </label>\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                type=\\\"radio\\\"\\n                value=\\\"whatsapp\\\"\\n                formControlName=\\\"notification\\\"\\n              />\\n              Whatsapp\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Type of order -->\\n      <div class=\\\"form-group row mb-2\\\">\\n        <label class=\\\"col-md-3 col-form-label pt-0\\\">Order Type</label>\\n        <div class=\\\"col-md-9\\\">\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                id=\\\"orderType1Id\\\"\\n                type=\\\"checkbox\\\"\\n                value=\\\"cakes\\\"\\n                checked\\n                formControlName=\\\"orderType1\\\"\\n              />\\n              Cakes\\n            </label>\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                id=\\\"orderType2Id\\\"\\n                type=\\\"checkbox\\\"\\n                value=\\\"cupcakes\\\"\\n                formControlName=\\\"orderType2\\\"\\n              />\\n              Cup Cakes\\n            </label>\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                id=\\\"orderType3Id\\\"\\n                type=\\\"checkbox\\\"\\n                value=\\\"cookies\\\"\\n                formControlName=\\\"orderType3\\\"\\n              />\\n              Cookies\\n            </label>\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                id=\\\"orderType4Id\\\"\\n                type=\\\"checkbox\\\"\\n                value=\\\"others\\\"\\n                formControlName=\\\"orderType4\\\"\\n              />\\n              Others\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- Number of Servings -->\\n      <div class=\\\"form-group row mb-2\\\">\\n        <label class=\\\"col-md-3 col-form-label pt-0\\\">Number of Servings</label>\\n        <div class=\\\"col-md-4\\\">\\n          <select class=\\\"form-control\\\" formControlName=\\\"servings\\\" required>\\n            <option value=\\\"\\\" disabled selected hidden>Select Value...</option>\\n            <option value=\\\"5\\\">5</option>\\n            <option value=\\\"10\\\">10</option>\\n            <option value=\\\"15\\\">15</option>\\n            <option value=\\\"20\\\">20</option>\\n            <option value=\\\"25\\\">25</option>\\n            <option value=\\\"30\\\">30</option>\\n            <option value=\\\"35\\\">35</option>\\n            <option value=\\\"40\\\">40</option>\\n            <option value=\\\"50\\\">50</option>\\n            <option value=\\\"60\\\">60</option>\\n            <option value=\\\"100\\\">100</option>\\n            <option value=\\\"200\\\">200</option>\\n          </select>\\n        </div>\\n      </div>\\n      <!-- Type of occassion -->\\n      <div class=\\\"form-group row mb-2\\\">\\n        <label class=\\\"col-md-3 col-form-label\\\">Type of Occassion</label>\\n        <div class=\\\"col-md-9\\\">\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                id=\\\"typeOfOccassion\\\"\\n                type=\\\"radio\\\"\\n                value=\\\"birthday\\\"\\n                formControlName=\\\"occassion\\\"\\n              />Birthday</label\\n            >\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                id=\\\"typeOfOccassion\\\"\\n                type=\\\"radio\\\"\\n                value=\\\"wedding\\\"\\n                formControlName=\\\"occassion\\\"\\n              />\\n              Wedding</label\\n            >\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                id=\\\"typeOfOccassion\\\"\\n                type=\\\"radio\\\"\\n                value=\\\"engagement\\\"\\n                formControlName=\\\"occassion\\\"\\n              />Engagement</label\\n            >\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                id=\\\"typeOfOccassion\\\"\\n                type=\\\"radio\\\"\\n                value=\\\"party\\\"\\n                formControlName=\\\"occassion\\\"\\n              />Party</label\\n            >\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                id=\\\"typeOfOccassion\\\"\\n                type=\\\"radio\\\"\\n                value=\\\"others\\\"\\n                formControlName=\\\"occassion\\\"\\n              />Others</label\\n            >\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row mb-2\\\">\\n        <label class=\\\"col-md-3 col-form-label\\\">Date of Occasion</label>\\n        <div class=\\\"col-md-9\\\">\\n          <input\\n            class=\\\"form-control\\\"\\n            id=\\\"dateOfOccassion\\\"\\n            type=\\\"Date\\\"\\n            formControlName=\\\"dateOfOccassion\\\"\\n          />\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row mb-2\\\">\\n        <label class=\\\"col-md-3 col-form-label\\\">Describe your Order</label>\\n        <div class=\\\"col-md-9\\\">\\n          <textarea\\n            class=\\\"form-control\\\"\\n            id=\\\"theme\\\"\\n            type=\\\"text\\\"\\n            placeholder=\\\"Describe the theme you desire\\\"\\n            formControlName=\\\"theme\\\"\\n          ></textarea>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row mb-2\\\" *ngIf=\\\"product\\\">\\n        <label class=\\\"col-md-3 col-form-label\\\">Selected Item</label>\\n        <div class=\\\"col-md-3\\\">\\n          <figure>\\n            <img\\n              src=\\\"{{ product.imageUrl }}\\\" >\\n          </figure>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <label style=\\\"font-size:20px;\\\">\\n            <b>{{ product.productName }}</b></label>\\n        </div>\\n      </div>\\n\\n      <!-- Save button -->\\n      <div class=\\\"form-group row mb-2\\\">\\n        <div class=\\\"col-md-4\\\">\\n          <button\\n            class=\\\"btn btn-primary btn-lg\\\"\\n            type=\\\"submit\\\"\\n            style=\\\"width:120px\\\"\\n            [title]=\\\"\\n              contactUsForm.valid\\n                ? 'Save your entered data'\\n                : 'Disabled until the form data is valid'\\n            \\\"\\n            [disabled]=\\\"!contactUsForm.valid\\\"\\n          >\\n            Save\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<header>\\r\\n  <h2>\\r\\n    <span class=\\\"glyphicon glyphicon-user\\\"></span>\\r\\n    {{ customer.firstName | capitalize }} &nbsp; {{ customer.lastName | capitalize}}\\r\\n  </h2>\\r\\n</header>\\r\\n<br />\\r\\n<div class=\\\"card-edit\\\">\\r\\n  <form (ngSubmit)=\\\"submit()\\\" #productForm=\\\"ngForm\\\" *ngIf=\\\"customer._id !== null\\\" novalidate>\\r\\n    <div class=\\\"table\\\">\\r\\n      <table class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Email Address</th>\\r\\n            <td colspan=\\\"4\\\">{{ customer.email }}</td>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Phone Number</th>\\r\\n            <td colspan=\\\"4\\\">{{ customer.phone }}</td>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <thead>\\r\\n            <tr>\\r\\n              <th>Notification Method</th>\\r\\n              <td colspan=\\\"4\\\">{{ customer.notification }}</td>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <thead>\\r\\n              <tr>\\r\\n                <th>Order Types</th>\\r\\n                <th>Cakes</th>\\r\\n                <th>Cup Cakes</th>\\r\\n                <th>Cookies</th>\\r\\n                <th>Others</th>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td></td>\\r\\n                <td>{{ customer.orderType1 }}</td>\\r\\n                <td> {{ customer.orderType2 }} </td>\\r\\n                <td>  {{ customer.orderType3 }} </td>\\r\\n                <td> {{ customer.orderType4 }}</td>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n            <thead>\\r\\n                <tr>\\r\\n                  <th>Number of Servings</th>\\r\\n                  <td colspan=\\\"4\\\">{{ customer.servings }}</td>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <thead>\\r\\n                  <tr>\\r\\n                    <th>Occassion</th>\\r\\n                    <td colspan=\\\"4\\\"> {{ customer.occassion }}</td>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>Date of Occassion</th>\\r\\n                    <td colspan=\\\"4\\\"> {{ customer.dateOfOccassion | date: 'mediumDate' }}</td>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>Date of Application</th>\\r\\n                    <td colspan=\\\"4\\\"> {{ customer.dateOfApplication | date: 'mediumDate' }}</td>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n              <thead>\\r\\n                  <tr>\\r\\n                    <th>Theme Requested</th>\\r\\n                    <td colspan=\\\"4\\\">{{ customer.theme }}</td>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n    <br />\\r\\n\\r\\n    <div *ngIf=\\\"customer\\\">\\r\\n      <div\\r\\n        class=\\\"alert alert-warning\\\"\\r\\n        *ngIf=\\\"customer._id && deleteMessageEnabled\\\"\\r\\n      >\\r\\n        Delete Customer?&nbsp;&nbsp;<button\\r\\n          class=\\\"btn btn-danger\\\"\\r\\n          (click)=\\\"delete($event)\\\"\\r\\n        >\\r\\n          Yes</button\\r\\n        >&nbsp;&nbsp;\\r\\n        <button class=\\\"btn btn-default\\\" (click)=\\\"deleteMessageEnabled = false\\\">\\r\\n          No\\r\\n        </button>\\r\\n      </div>\\r\\n      <button\\r\\n        class=\\\"btn btn-danger\\\"\\r\\n        *ngIf=\\\"customer._id && !deleteMessageEnabled\\\"\\r\\n        (click)=\\\"deleteMessageEnabled = true\\\"\\r\\n      >\\r\\n        Delete</button\\r\\n      >&nbsp;&nbsp;\\r\\n\\r\\n      <div class=\\\"pull-right\\\" *ngIf=\\\"!deleteMessageEnabled\\\">\\r\\n        <button class=\\\"btn btn-default\\\" (click)=\\\"cancel($event)\\\">Cancel</button\\r\\n        >&nbsp;&nbsp;\\r\\n        <button\\r\\n          type=\\\"submit\\\"\\r\\n          class=\\\"btn btn-success\\\"\\r\\n          [disabled]=\\\"!productForm.valid\\\"\\r\\n        >\\r\\n          {{ operationText }}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <br />\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage != null\\\">\\r\\n      {{ errorMessage }}\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","export default \"<div>\\n  <header>\\n      <h3>\\n          <span class=\\\"glyphicon glyphicon-user\\\"></span>\\n          {{ customer.firstName }} {{ customer.lastName }}\\n      </h3>\\n  </header>\\n  <br />\\n  <form [formGroup]=\\\"customerForm\\\" (ngSubmit)=\\\"submit(customerForm)\\\" class=\\\"editForm\\\" novalidate>\\n    <div class=\\\"form-group\\\">\\n      <label>First Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\" />\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"customerForm.controls.firstName.untouched || customerForm.controls.firstName.valid\\\">First Name is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Last Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lastName\\\">\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"customerForm.controls.lastName.untouched || customerForm.controls.lastName.valid\\\">Last Name is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Gender</label>\\n      <br />\\n      <div class=\\\"radio\\\">\\n        <label>\\n          <input type=\\\"radio\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\" value=\\\"Male\\\" />\\n          Male\\n        </label>\\n      </div>\\n      <div class=\\\"radio\\\">\\n        <label>\\n          <input type=\\\"radio\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\" value=\\\"Female\\\"  /> \\n          Female\\n        </label>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Email</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" />\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"customerForm.controls.email.untouched || customerForm.controls.email.valid\\\">Email is required and must be valid</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Address</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" />\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"customerForm.controls.address.untouched || customerForm.controls.address.valid\\\">Address is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>City</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"city\\\" />\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"customerForm.controls.city.untouched || customerForm.controls.city.valid\\\">City is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>State</label>\\n      <select class=\\\"form-control\\\" formControlName=\\\"stateId\\\">\\n          <option *ngFor=\\\"let state of states\\\" [ngValue]=\\\"state.id\\\">{{state.name}}</option>\\n      </select>\\n    </div>\\n    <br />\\n\\n    <div *ngIf=\\\"customer\\\">\\n      <div class=\\\"alert alert-warning\\\" *ngIf=\\\"customer._id && deleteMessageEnabled\\\">\\n         Delete Customer?&nbsp;&nbsp;<button class=\\\"btn btn-danger\\\" (click)=\\\"delete($event)\\\">Yes</button>&nbsp;&nbsp;\\n         <button class=\\\"btn btn-default\\\" (click)=\\\"deleteMessageEnabled = false\\\">No</button>\\n      </div>\\n      <button class=\\\"btn btn-danger\\\" *ngIf=\\\"customer._id && !deleteMessageEnabled\\\" (click)=\\\"deleteMessageEnabled = true\\\">Delete</button>&nbsp;&nbsp;\\n\\n      <div class=\\\"pull-right\\\" *ngIf=\\\"!deleteMessageEnabled\\\">\\n        <button class=\\\"btn btn-default\\\" (click)=\\\"cancel($event)\\\">Cancel</button>&nbsp;&nbsp;\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!customerForm.valid\\\">{{ operationText }}</button>\\n      </div>\\n    </div>\\n    <br />\\n    <br />\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage != null\\\">{{ errorMessage }}</div>\\n\\n  </form>\\n</div>\"","export default \"<div>\\n  <header>\\n      <h3>\\n          <span class=\\\"glyphicon glyphicon-user\\\"></span>\\n          {{ customer.firstName }} {{ customer.lastName }}\\n      </h3>\\n  </header>\\n  <br />\\n  <div class=\\\"card-edit\\\">\\n  <form (ngSubmit)=\\\"submit()\\\" #customerForm=\\\"ngForm\\\" novalidate>\\n    <div class=\\\"form-group\\\">\\n      <label>First Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"customer.firstName\\\" #firstName=\\\"ngModel\\\" required>\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"firstName.untouched || firstName.valid\\\">First Name is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Last Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"customer.lastName\\\" #lastName=\\\"ngModel\\\" required>\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"lastName.untouched || lastName.valid\\\">Last Name is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Gender</label>\\n      <br />\\n      <div class=\\\"radio\\\">\\n        <label>\\n          <input type=\\\"radio\\\" name=\\\"gender\\\" [(ngModel)]=\\\"customer.gender\\\" #gender=\\\"ngModel\\\" value=\\\"Male\\\" required />\\n          Male\\n        </label>\\n      </div>\\n      <div class=\\\"radio\\\">\\n        <label>\\n          <input type=\\\"radio\\\" name=\\\"gender\\\" [(ngModel)]=\\\"customer.gender\\\" #gender=\\\"ngModel\\\" value=\\\"Female\\\" required />\\n          Female\\n        </label>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Email</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"customer.email\\\" #email=\\\"ngModel\\\" required pattern=\\\"^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$\\\" />\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"email.untouched || email.valid\\\">Email is required and must be valid</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Address</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" [(ngModel)]=\\\"customer.address\\\" #address=\\\"ngModel\\\" required>\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"address.untouched || address.valid\\\">Address is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>City</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"customer.city\\\" #city=\\\"ngModel\\\" required>\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"city.untouched || city.valid\\\">City is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>State</label>\\n      <select class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"customer.stateId\\\"\\n              name=\\\"state\\\"\\n              required>\\n          <option *ngFor=\\\"let state of states\\\" [ngValue]=\\\"state.name\\\">{{state.name}}</option>\\n      </select>\\n    </div>\\n    <br />\\n\\n    <div *ngIf=\\\"customer\\\">\\n      <div class=\\\"alert alert-warning\\\" *ngIf=\\\"customer._id && deleteMessageEnabled\\\">\\n         Delete Customer?&nbsp;&nbsp;<button class=\\\"btn btn-danger\\\" (click)=\\\"delete($event)\\\">Yes</button>&nbsp;&nbsp;\\n         <button class=\\\"btn btn-default\\\" (click)=\\\"deleteMessageEnabled = false\\\">No</button>\\n      </div>\\n      <button class=\\\"btn btn-danger\\\" *ngIf=\\\"customer._id && !deleteMessageEnabled\\\" (click)=\\\"deleteMessageEnabled = true\\\">Delete</button>&nbsp;&nbsp;\\n\\n      <div class=\\\"pull-right\\\" *ngIf=\\\"!deleteMessageEnabled\\\">\\n        <button class=\\\"btn btn-default\\\" (click)=\\\"cancel($event)\\\">Cancel</button>&nbsp;&nbsp;\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!customerForm.valid\\\">{{ operationText }}</button>\\n      </div>\\n    </div>\\n    <br />\\n    <br />\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage != null\\\">{{ errorMessage }}</div>\\n\\n  </form>\\n</div>\\n</div>\\n\"","export default \"<div class=\\\"col-md-12\\\">\\n  <div class=\\\"table\\\">\\n    <table class=\\\"table table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th>&nbsp;</th>\\n          <th (click)=\\\"sort('firstName')\\\">First Name</th>\\n          <th (click)=\\\"sort('lastName')\\\">Last Name</th>\\n          <th (click)=\\\"sort('address')\\\">Address</th>\\n          <th (click)=\\\"sort('city')\\\">City</th>\\n          <th (click)=\\\"sort('state.name')\\\">State</th>\\n          <th (click)=\\\"sort('orderTotal')\\\">Order Total</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let customer of customers; trackBy: trackby.customer\\\">\\n          <td>\\n            <img\\n              src=\\\"/assets/images/{{ customer.gender | lowercase }}.png\\\"\\n              class=\\\"card-image\\\"\\n              alt=\\\"Customer Image\\\"\\n              [style.width.px]=\\\"imageWidth\\\"\\n              [style.margin.px]=\\\"imageMargin\\\"\\n            />\\n          </td>\\n          <td>\\n            <a [routerLink]=\\\"['/customers', customer._id]\\\">{{\\n              customer.firstName | capitalize\\n            }}</a>\\n          </td>\\n          <td>{{ customer.lastName | capitalize }}</td>\\n          <td>{{ customer.address }}</td>\\n          <td>{{ customer.city | trim }}</td>\\n          <td>{{ customer.state.name }}</td>\\n          <td>{{ customer.orderTotal | currency: \\\"USD\\\":\\\"symbol\\\" }}</td>\\n        </tr>\\n        <tr *ngIf=\\\"!customers.length\\\">\\n          <td>&nbsp;</td>\\n          <td colspan=\\\"6\\\">{{ customers.length }} records were found</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    {{ title }}\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <app-filter-textbox\\n          (changed)=\\\"filterChanged($event)\\\"\\n        ></app-filter-textbox>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n      <button\\n        class=\\\"btn btn-primary mr-3\\\"\\n        style=\\\"width:180px;\\\"\\n        type=\\\"button\\\"\\n        title=\\\"Add New Customer\\\"\\n        [routerLink]=\\\"['/customers', '0']\\\"\\n      >\\n        Add New Customer\\n      </button>\\n    </div>\\n  </div>\\n\\n    <app-customers-grid [customers]=\\\"filteredCustomers\\\"></app-customers-grid>\\n  </div>\\n  <app-pagination\\n    [totalItems]=\\\"totalRecords\\\"\\n    [pageSize]=\\\"pageSize\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\"\\n  ></app-pagination>\\n</div>\\n\"","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">Messages\\n    <button class=\\\"btn btn-light btn-sm float-right\\\"\\n            (click)=\\\"close()\\\">\\n      X\\n    </button>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div *ngFor=\\\"let message of messages; let i=index\\\">\\n      <div *ngIf=\\\"i<10\\\"\\n           class=\\\"message-row\\\">\\n        {{ message }}\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"jw-modal\\\">\\n    <div class=\\\"jw-modal-body\\\">\\n        <ng-content></ng-content>\\n    </div>\\n</div>\\n<div class=\\\"jw-modal-background\\\"></div>\"","export default \"<header>\\r\\n  <h2>\\r\\n    <span class=\\\"glyphicon glyphicon-user\\\"></span>\\r\\n    {{ product.productName }}\\r\\n  </h2>\\r\\n</header>\\r\\n<br />\\r\\n<!-- If the user is logged in as admin this section will be active -->\\r\\n<div class=\\\"card-edit\\\" *ngIf=\\\"isLoggedIn\\\">\\r\\n  <form (ngSubmit)=\\\"submit()\\\" #productForm=\\\"ngForm\\\" novalidate>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Product Name</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        name=\\\"productName\\\"\\r\\n        [(ngModel)]=\\\"product.productName\\\"\\r\\n        #productName=\\\"ngModel\\\"\\r\\n        required\\r\\n      />\\r\\n      <div\\r\\n        class=\\\"alert alert-danger\\\"\\r\\n        [hidden]=\\\"productName.untouched || productName.valid\\\"\\r\\n      >\\r\\n        Product Name is required\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Dimensions</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        name=\\\"dimensions\\\"\\r\\n        [(ngModel)]=\\\"product.productDimensions\\\"\\r\\n        #dimensions=\\\"ngModel\\\"\\r\\n        required\\r\\n      />\\r\\n      <div\\r\\n        class=\\\"alert alert-danger\\\"\\r\\n        [hidden]=\\\"dimensions.untouched || dimensions.valid\\\"\\r\\n      >\\r\\n        Dimensions are required\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Servings</label>\\r\\n      <input\\r\\n        type=\\\"number\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        name=\\\"servings\\\"\\r\\n        [(ngModel)]=\\\"product.productServings\\\"\\r\\n        #servings=\\\"ngModel\\\"\\r\\n        required\\r\\n      />\\r\\n      <div\\r\\n        class=\\\"alert alert-danger\\\"\\r\\n        [hidden]=\\\"servings.untouched || servings.valid\\\"\\r\\n      >\\r\\n        Number of servings are required\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Covering</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        name=\\\"covering\\\"\\r\\n        [(ngModel)]=\\\"product.productCovering\\\"\\r\\n        #covering=\\\"ngModel\\\"\\r\\n        required\\r\\n      />\\r\\n      <div\\r\\n        class=\\\"alert alert-danger\\\"\\r\\n        [hidden]=\\\"covering.untouched || covering.valid\\\"\\r\\n      >\\r\\n        Covering is required\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Category</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        name=\\\"category\\\"\\r\\n        [(ngModel)]=\\\"product.category\\\"\\r\\n        #category=\\\"ngModel\\\"\\r\\n        required\\r\\n      />\\r\\n      <div\\r\\n        class=\\\"alert alert-danger\\\"\\r\\n        [hidden]=\\\"category.untouched || category.valid\\\"\\r\\n      >\\r\\n        Category is required\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Description</label>\\r\\n      <textarea\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        name=\\\"description\\\"\\r\\n        [(ngModel)]=\\\"product.description\\\"\\r\\n        #description=\\\"ngModel\\\"\\r\\n        required\\r\\n      ></textarea>\\r\\n      <div\\r\\n        class=\\\"alert alert-danger\\\"\\r\\n        [hidden]=\\\"description.untouched || description.valid\\\"\\r\\n      >\\r\\n        Description is required\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Image URL</label>\\r\\n      <input\\r\\n        type=\\\"url\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        name=\\\"imageUrl\\\"\\r\\n        [(ngModel)]=\\\"product.imageUrl\\\"\\r\\n        #imageUrl=\\\"ngModel\\\"\\r\\n        required\\r\\n      />\\r\\n      <div\\r\\n        class=\\\"alert alert-danger\\\"\\r\\n        [hidden]=\\\"imageUrl.untouched || imageUrl.valid\\\"\\r\\n      >\\r\\n        Image Url is required\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <br />\\r\\n\\r\\n    <div *ngIf=\\\"product\\\">\\r\\n      <div\\r\\n        class=\\\"alert alert-warning\\\"\\r\\n        *ngIf=\\\"product._id && deleteMessageEnabled\\\"\\r\\n      >\\r\\n        Delete Product?&nbsp;&nbsp;<button\\r\\n          class=\\\"btn btn-danger\\\"\\r\\n          (click)=\\\"delete($event)\\\"\\r\\n        >\\r\\n          Yes</button\\r\\n        >&nbsp;&nbsp;\\r\\n        <button class=\\\"btn btn-default\\\" (click)=\\\"deleteMessageEnabled = false\\\">\\r\\n          No\\r\\n        </button>\\r\\n      </div>\\r\\n      <button\\r\\n        class=\\\"btn btn-danger\\\"\\r\\n        *ngIf=\\\"product._id && !deleteMessageEnabled\\\"\\r\\n        (click)=\\\"deleteMessageEnabled = true\\\"\\r\\n      >\\r\\n        Delete</button\\r\\n      >&nbsp;&nbsp;\\r\\n\\r\\n      <div class=\\\"pull-right\\\" *ngIf=\\\"!deleteMessageEnabled\\\">\\r\\n        <button class=\\\"btn btn-default\\\" (click)=\\\"cancel($event)\\\">Cancel</button\\r\\n        >&nbsp;&nbsp;\\r\\n        <button\\r\\n          type=\\\"submit\\\"\\r\\n          class=\\\"btn btn-success\\\"\\r\\n          [disabled]=\\\"!productForm.valid\\\"\\r\\n        >\\r\\n          {{ operationText }}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <br />\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage != null\\\">\\r\\n      {{ errorMessage }}\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n<!-- If the user is not logged in  -->\\r\\n<div class=\\\"card-edit\\\" *ngIf=\\\"!isLoggedIn\\\">\\r\\n  <form (ngSubmit)=\\\"addOrder()\\\" #productForm=\\\"ngForm\\\" novalidate>\\r\\n    <table class=\\\"table table-striped table-hover\\\">\\r\\n      <tr>\\r\\n        <th>Product Name</th>\\r\\n        <td>{{ product.productName }}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th>Dimensions</th>\\r\\n        <td>{{ product.productDimensions }}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th>Servings</th>\\r\\n        <td>{{ product.productServings }}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th>Covering</th>\\r\\n        <td>{{ product.productCovering }}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th>Category</th>\\r\\n        <td>{{ product.category }}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th>Description</th>\\r\\n        <td>{{ product.description }}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th>Image</th>\\r\\n        <td>\\r\\n          <figure>\\r\\n            <img src=\\\"{{ product.imageUrl }}\\\" />\\r\\n          </figure>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n\\r\\n    <br />\\r\\n    <div *ngIf=\\\"product\\\">\\r\\n      <div class=\\\"pull-right\\\" *ngIf=\\\"!deleteMessageEnabled\\\">\\r\\n        <button class=\\\"btn btn-default\\\" (click)=\\\"cancel($event)\\\">Cancel</button\\r\\n        >&nbsp;&nbsp;\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">\\r\\n          {{ operationText }}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <br />\\r\\n  </form>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"col-md-12\\\">\\r\\n    <div *ngIf= \\\"isLoggedIn\\\" class=\\\"table\\\">\\r\\n        <table class=\\\"table table-striped table-hover\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th>&nbsp;</th>\\r\\n                    <th\\r\\n                    (click)=\\\"sort('produdtName')\\\">Name</th>\\r\\n                    <th\\r\\n                    (click)=\\\"sort('description')\\\">Description</th>\\r\\n                    <th\\r\\n                    (click)=\\\"sort('dimensions')\\\">Dimensions</th>\\r\\n                    <th\\r\\n                    (click)=\\\"sort('servings')\\\">Servings</th>\\r\\n                    <th\\r\\n                    (click)=\\\"sort('covering')\\\">Covering</th>\\r\\n                    <th\\r\\n                    (click)=\\\"sort('category')\\\">Category</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let product of products;\\r\\n                          trackBy:trackby.product\\\">\\r\\n                    <td>\\r\\n                      <figure>\\r\\n                      <img src= \\\"{{ product.imageUrl }}\\\"\\r\\n                          alt=\\\"Product Image\\\"\\r\\n                          />\\r\\n                        </figure>\\r\\n                    </td>\\r\\n                    <td *ngIf=\\\"!isLoggedIn\\\">{{ product.productName | capitalize }}</td>\\r\\n                    <td *ngIf=\\\"isLoggedIn\\\"><a [routerLink]=\\\"['/products',product._id]\\\">{{ product.productName | capitalize }}</a></td>\\r\\n                    <td>{{ product.description }}</td>\\r\\n                    <td>{{ product.productDimensions }}</td>\\r\\n                    <td>{{ product.productServings }}</td>\\r\\n                    <td>{{ product.productCovering }}</td>\\r\\n                    <td>{{ product.category | capitalize }}</td>\\r\\n                </tr>\\r\\n                <tr *ngIf=\\\"!products.length\\\">\\r\\n                    <td>&nbsp;</td>\\r\\n                    <td colspan=\\\"6\\\">{{ products.length}} records were found</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!isLoggedIn\\\">\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-column\\\" *ngFor=\\\"let product of products\\\">\\r\\n            <a [routerLink]=\\\"['/products', product._id]\\\"><img src=\\\"{{ product.imageUrl }}\\\" style=\\\"width:90%\\\">\\r\\n          </a>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n                {{ title }}\\n    </div>\\n        <div class=\\\"card-body\\\">\\n              <div class=\\\"search-bar\\\">\\n                    <app-filter-textbox (changed)=\\\"filterChanged($event)\\\"></app-filter-textbox>\\n\\n\\n                    <button  class=\\\"button button1\\\"\\n                              *ngIf=\\\"isLoggedIn\\\"\\n                              title=\\\"Add New Product\\\"\\n                              [routerLink]=\\\"['/products', '0']\\\">Add New Product\\n                            </button>\\n\\n            </div>\\n\\n          </div>\\n          <div class=\\\"card-body\\\">\\n        <app-products-grid [products]=\\\"filteredProducts\\\"></app-products-grid>\\n      </div>\\n        <app-pagination [totalItems]=\\\"totalRecords\\\"\\n            [pageSize]=\\\"pageSize\\\"\\n            (pageChanged)=\\\"pageChanged($event)\\\"></app-pagination>\\n\\n</div>\\n\\n\"","export default \"<nav [hidden]=\\\"!isVisible\\\">\\n  <ul class=\\\"pagination\\\">\\n    <li [class.disabled]=\\\"!previousEnabled\\\" (click)=\\\"previousNext(-1, $event)\\\">\\n      <a aria-label=\\\"Previous\\\">\\n        <span aria-hidden=\\\"true\\\">&laquo;</span>\\n      </a>\\n    </li>\\n    <li *ngFor=\\\"let page of pages\\\" (click)=\\\"changePage(page, $event)\\\" [class.active]=\\\"currentPage === page\\\">\\n      <a>{{ page }}</a>\\n    </li>\\n    <li [class.disabled]=\\\"!nextEnabled\\\" (click)=\\\"previousNext(1, $event)\\\">\\n      <a aria-label=\\\"Next\\\">\\n        <span aria-hidden=\\\"true\\\">&raquo;</span>\\n      </a>\\n    </li>\\n  </ul>\\n</nav>\"","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    {{pageTitle}}\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n    <form novalidate\\n          (ngSubmit)=\\\"login(loginForm)\\\"\\n          #loginForm=\\\"ngForm\\\"\\n          autocomplete=\\\"off\\\">\\n      <fieldset>\\n\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-md-3 col-form-label\\\"\\n                 for=\\\"userNameId\\\">User Name</label>\\n          <div class=\\\"col-md-8\\\">\\n            <input class=\\\"form-control\\\"\\n                   id=\\\"userNameId\\\"\\n                   type=\\\"text\\\"\\n                   placeholder=\\\"User Name (required)\\\"\\n                   required\\n                   ngModel\\n                   name=\\\"userName\\\"\\n                   #userNameVar=\\\"ngModel\\\"\\n                   [ngClass]=\\\"{'is-invalid': (userNameVar.touched || userNameVar.dirty) && !userNameVar.valid }\\\" />\\n            <span class=\\\"invalid-feedback\\\">\\n              <span *ngIf=\\\"!!userNameVar.errors?.required\\\">\\n                User name is required.\\n              </span>\\n            </span>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-md-3 col-form--label\\\"\\n                 for=\\\"passwordId\\\">Password</label>\\n\\n          <div class=\\\"col-md-8\\\">\\n            <input class=\\\"form-control\\\"\\n                   id=\\\"passwordId\\\"\\n                   type=\\\"password\\\"\\n                   placeholder=\\\"Password (required)\\\"\\n                   required\\n                   ngModel\\n                   name=\\\"password\\\"\\n                   #passwordVar=\\\"ngModel\\\"\\n                   [ngClass]=\\\"{'is-invalid': (passwordVar.touched || passwordVar.dirty) && !passwordVar.valid }\\\" />\\n            <span class=\\\"invalid-feedback\\\">\\n              <span *ngIf=\\\"!!passwordVar.errors?.required\\\">\\n                Password is required.\\n              </span>\\n            </span>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-8\\\">\\n            <button class=\\\"btn btn-primary mr-3\\\"\\n                    type=\\\"submit\\\"\\n                    style=\\\"width:120px\\\"\\n                    [disabled]=\\\"!loginForm.valid\\\">\\n              Log In\\n            </button>\\n            <button class=\\\"btn btn-outline-secondary\\\"\\n                    type=\\\"button\\\"\\n                    style=\\\"width:120px\\\"\\n                    [routerLink]=\\\"['/welcome']\\\">\\n              Cancel\\n            </button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n\\n  <div class=\\\"alert alert-danger\\\"\\n       *ngIf=\\\"errorMessage\\\">{{errorMessage}}\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    {{ pageTitle }}\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div id=\\\"carousel\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n        <ol class=\\\"carousel-indicators\\\">\\n          <li data-target=\\\"#carousel\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n          <li data-target=\\\"#carousel\\\" data-slide-to=\\\"1\\\"></li>\\n          <li data-target=\\\"#carousel\\\" data-slide-to=\\\"2\\\"></li>\\n          <li data-target=\\\"#carousel\\\" data-slide-to=\\\"3\\\"></li>\\n          <li data-target=\\\"#carousel\\\" data-slide-to=\\\"4\\\"></li>\\n          <li data-target=\\\"#carousel\\\" data-slide-to=\\\"5\\\"></li>\\n        </ol>\\n        <div class=\\\"carousel-inner\\\">\\n          <div class=\\\"carousel-item active\\\">\\n            <img\\n              class=\\\"large-image\\\"\\n              src=\\\"../../assets/imagesWelcome/img1.png\\\"\\n            />\\n          </div>\\n          <div class=\\\"carousel-item\\\">\\n            <img\\n              class=\\\"large-image\\\"\\n              src=\\\"../../assets/imagesWelcome/img2.png\\\"\\n            />\\n          </div>\\n          <div class=\\\"carousel-item\\\">\\n            <img\\n              class=\\\"large-image\\\"\\n              src=\\\"../../assets/imagesWelcome/img3.png\\\"\\n            />\\n          </div>\\n          <div class=\\\"carousel-item\\\">\\n            <img\\n              class=\\\"large-image\\\"\\n              src=\\\"../../assets/imagesWelcome/img4.png\\\"\\n            />\\n          </div>\\n          <div class=\\\"carousel-item\\\">\\n            <img\\n              class=\\\"large-image\\\"\\n              src=\\\"../../assets/imagesWelcome/img5.png\\\"\\n            />\\n          </div>\\n          <div class=\\\"carousel-item\\\">\\n            <img\\n              class=\\\"large-image\\\"\\n              src=\\\"../../assets/imagesWelcome/img6.png\\\"\\n            />\\n          </div>\\n        </div>\\n        <a\\n          class=\\\"carousel-control-prev\\\"\\n          href=\\\"#carousel\\\"\\n          role=\\\"button\\\"\\n          data-slide=\\\"prev\\\"\\n        >\\n          <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n          <span class=\\\"sr-only\\\">Previous</span>\\n        </a>\\n        <a\\n          class=\\\"carousel-control-next\\\"\\n          href=\\\"#carousel\\\"\\n          role=\\\"button\\\"\\n          data-slide=\\\"next\\\"\\n        >\\n          <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n          <span class=\\\"sr-only\\\">Next</span>\\n        </a>\\n      </div>\\n    </div>\\n    <br><br>\\n    <div class=\\\"text-header\\\">\\n      <h3>About Us</h3>\\n    </div>\\n    <div class=\\\"text-body\\\">\\n      <p>\\n        Made by Sally is a home organization that specilizes in producing\\n        different types of cakes and sweets. Our concept is to provide clients\\n        with a <b> home made flavour </b>decorated with a professional and\\n        elegant design of your choice. In addition to the different types of cakes,\\n        we also provide a variety of delicacies such as decorated cookies, cup cakes,\\n        and several other products upon your request.\\n      </p>\\n    </div>\\n    <br><br>\\n    <div class=\\\"text-header\\\">\\n      <h3>Our History</h3>\\n    </div>\\n    <div class=\\\"main\\\">\\n      <div class=\\\"sidebar text-body\\\">\\n      <p>\\n        Our business started in 2015 and it was met with great success among all\\n        our clients.\\n        We managed to create a vareity of flavours and custom home made fillings that became very popular and were demanded frequently. Our designs and decorations were complemented occassionaly which was a reason of assurance to grow our business in order to reach more and more cake and sweets lovers.\\n        <br />\\n        Our products and services are suitable for several celebrations such as birthday\\n        parties, new born babies, engagments, anniversaries, and also\\n        weddings. So feel confident in trying them as we are sure you'll love them.<br />\\n\\n        If you are looking for a cake that serves both design and flavour,\\n        you've came to the right place, we care about our client's so much that\\n        we seek to provide the best experience possible.\\n      </p>\\n    </div>\\n    <div class=\\\"page-wrap\\\">\\n      <img src=\\\"../../assets/imagesWelcome/welcomepage1.jpg\\\"/>\\n    </div>\\n    </div>\\n  </div>\\n  <div class=\\\"footer\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"text-center\\\" style=\\\"font-weight: bold\\\">\\n          You can contact us through:\\n      </div>\\n      <div class=\\\"side-300\\\">\\n      <a href=\\\"https://www.instagram.com/made.by.sally_cake/\\\">\\n        <img class=\\\"tiny-image\\\" src=\\\"../../assets/imagesWelcome/instagram.png\\\"></a>\\n\\n\\n        <a href=\\\"https://www.facebook.com/BakingAndDecoration/\\\">\\n          <img class=\\\"tiny-image\\\" src=\\\"../../assets/imagesWelcome/facebook.png\\\"></a>\\n\\n\\n          <img class=\\\"tiny-image\\\" src=\\\"../../assets/imagesWelcome/whatapp.png\\\"\\n            (click)=\\\"openModal('whatsapp')\\\">\\n      </div>\\n      <jw-modal id='whatsapp'>\\n        <h1>Whatsapp Number:</h1>\\n        <p><input type=\\\"text\\\" [(ngModel)]= \\\"bodytext\\\"></p>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"closeModal('whatsapp')\\\">Close</button>\\n      </jw-modal>\\n    </div>\\n  <div class=\\\"text-center\\\" style=\\\"font-weight: bold\\\">\\n        Developed by: <br>Wissam Bou Ghannam\\n  </div>\\n  </div>\\n\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CustomersComponent } from './customers/customers.component';\nimport { CustomersGridComponent } from './customers/customers-grid.component';\nimport { CustomerEditComponent } from './customers/customer-edit.component';\nimport { CustomerEditReactiveComponent } from './customers/customer-edit-reactive.component';\nimport { IRouting } from './shared/interfaces';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { ProductsGridComponent } from './products/products-grid.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductEditComponent } from './products/product-edit.component';\nimport { LoginComponent } from './user/login.component';\nimport { ContactUsComponent } from './contactus/contactus.component';\nimport { ContactusListComponent } from './contactus/contactus-list.component';\nimport { ContactusGridComponent } from './contactus/contactus-grid.component';\nimport { NewOrderComponent } from './contactus/neworder.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: '/welcome' },\n  { path : 'welcome', component: WelcomeComponent},\n  { path: 'products', component: ProductsComponent},\n  { path: 'products/:id', component: ProductEditComponent},\n  { path: 'customers', component: CustomersComponent},\n  { path: 'customers/:id', component: CustomerEditComponent},\n  { path: 'contactus-list', component: ContactusListComponent},\n  { path: 'contactus', component: ContactUsComponent},\n  { path: 'contactus-order/:orderId', component: ContactUsComponent},\n  { path: 'contactus/:id', component: NewOrderComponent},\n  { path: 'login', component: LoginComponent},\n  { path: '**', redirectTo: '/welcome' } // catch any unfound routes and redirect to home page\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {\n  static components = [ CustomersComponent,\n                        CustomerEditComponent,\n                        CustomerEditReactiveComponent,\n                        CustomersGridComponent,\n                        ProductsComponent,\n                        ProductsGridComponent,\n                        ProductEditComponent,\n                        LoginComponent,\n                        ContactUsComponent,\n                        ContactusGridComponent,\n                        ContactusListComponent,\n                        NewOrderComponent ];\n}\n","import { trigger, animate, transition, style, group, query } from '@angular/animations';\r\n\r\nexport const slideInAnimation = trigger('slideInAnimation', [\r\n  // Transition between any two states\r\n  transition('* <=> *', [\r\n    // Events to apply\r\n    // Defined style and animation function to apply\r\n    // Config object with optional set to true to handle when element not yet added to the DOM\r\n    query(':enter, :leave', style({ position: 'fixed', width: '100%', zIndex: 2 }), { optional: true }),\r\n    // group block executes in parallel\r\n    group([\r\n      query(':enter', [\r\n        style({ transform: 'translateX(100%)' }),\r\n        animate('0.5s ease-out', style({ transform: 'translateX(0%)' }))\r\n      ], { optional: true }),\r\n      query(':leave', [\r\n        style({ transform: 'translateX(0%)' }),\r\n        animate('0.5s ease-out', style({ transform: 'translateX(-100%)' }))\r\n      ], { optional: true })\r\n    ])\r\n  ])\r\n]);\r\n","import { Component, OnInit } from '@angular/core';\nimport { slideInAnimation } from './app.animation';\nimport { AuthService } from './core/auth.service';\nimport { MessageService } from './core/message.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ModalService } from './modal';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  animations: [slideInAnimation]\n})\nexport class AppComponent implements OnInit {\n\n  pageTitle = 'Made By Sally';\n  bodytext: string;\n  loading = true;\n  get isLoggedIn(): boolean {\n    return this.authService.isLoggedIn;\n  }\n\n  get userName(): string {\n    if (this.authService.currentUser) {\n      return this.authService.currentUser.userName;\n    }\n    return '';\n  }\n\n  get isMessageDisplayed(): boolean {\n    return this.messageService.isDisplayed;\n  }\n\n\n  constructor(private authService: AuthService,\n              private messageService: MessageService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private modalService: ModalService) { }\n\n  ngOnInit() {\n    this.bodytext = '+961 76 809 138';\n  }\n\n  // checkRouterEvent(routerEvent: Event) {\n  //     if (routerEvent instanceof NavigationStart) {\n  //       this.loading = true;\n  //     }\n\n  //     if (routerEvent instanceof NavigationEnd ||\n  //         routerEvent instanceof NavigationError ||\n  //         routerEvent instanceof NavigationCancel) {\n  //           this.loading = false;\n  //         }\n  // }\n\n  // displayMessage(): void {\n  //   this.router.navigate([{ outlets: { popup: ['messages']}}]);\n  //   this.messageService.isDisplayed = true;\n  // }\n\n  // hideMessage(): void {\n  //   this.router.navigate([ {outlets: { popup: null }}]);\n  //   this.messageService.isDisplayed = false;\n  // }\n\n  openModal(id: string) {\n    this.modalService.open(id);\n  }\n\n  closeModal(id: string) {\n    this.modalService.close(id);\n  }\n\n  logOut(): void {\n    this.authService.logout();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductsGridComponent } from './products/products-grid.component';\nimport { ProductEditComponent } from './products/product-edit.component';\nimport { LoginComponent } from './user/login.component';\nimport { MessageComponent } from './message/message.component';\nimport { ContactUsComponent } from './contactus/contactus.component';\nimport { ContactusListComponent } from './contactus/contactus-list.component';\nimport { ContactusGridComponent } from './contactus/contactus-grid.component';\nimport { NewOrderComponent } from './contactus/neworder.component';\nimport { ModalModule } from './modal';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    CoreModule,   // Singleton objects\n    SharedModule,  // Shared (multi-instance) objects\n    ModalModule\n  ],\n  declarations: [ AppComponent,\n                  AppRoutingModule.components,\n                  WelcomeComponent,\n                  ProductsComponent,\n                  ProductsGridComponent,\n                  ProductEditComponent,\n                  LoginComponent,\n                  MessageComponent,\n                  ContactUsComponent,\n                  ContactusGridComponent,\n                  ContactusListComponent,\n                  NewOrderComponent],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { NewCustomer } from '../shared/interfaces';\r\nimport { Sorter } from '../core/sorter';\r\nimport { TrackByService } from '../core/trackby.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-grid',\r\n  templateUrl: './contactus-grid.component.html',\r\n  // When using OnPush detectors, then the framework will check an OnPush\r\n  // component when any of its input properties changes, when it fires\r\n  // an event, or when an observable fires an event ~ Victor Savkin (Angular Team)\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ContactusGridComponent implements OnInit {\r\n\r\n  imageWidth = 50;\r\n  imageMargin = 2;\r\n  @Input() customerList: NewCustomer[] = [];\r\n\r\n  constructor(private sorter: Sorter, public trackby: TrackByService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  sort(prop: string) {\r\n      this.sorter.sort(this.customerList, prop);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataFilterService } from '../core/data-filter.service';\r\nimport { DataService } from '../core/data.service';\r\nimport { AuthService } from '../core/auth.service';\r\nimport { NewCustomer } from '../shared/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-contactus',\r\n  templateUrl: './contactus-list.component.html'\r\n})\r\nexport class ContactusListComponent implements OnInit {\r\n\r\n  title: string;\r\n  customerList: NewCustomer[] = [];\r\n  filteredCustomers: NewCustomer[] = [];\r\n\r\n  totalRecords = 0;\r\n  pageSize = 10;\r\n  get isLoggedIn(): boolean {\r\n    return this.authService.isLoggedIn;\r\n  }\r\n  constructor(private router: Router,\r\n              private dataService: DataService,\r\n              private dataFilter: DataFilterService,\r\n              private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.title = 'Customer List';\r\n    this.getCustomerOrders();\r\n\r\n  }\r\n\r\n  filterChanged(filterText: string) {\r\n\r\n    console.log('The customer list data ' + this.customerList);\r\n    if (filterText && this.customerList) {\r\n      const props = ['firstName', 'lastName', 'email', 'phone'];\r\n      this.filteredCustomers = this.dataFilter.filter(this.customerList, props, filterText);\r\n    } else {\r\n      this.filteredCustomers = this.customerList;\r\n    }\r\n  }\r\n\r\n  pageChanged(page: number) {\r\n    this.getCustomerOrders();\r\n  }\r\n\r\n  getCustomerOrders() {\r\n    this.dataService.getCustomerOrders()\r\n    .subscribe((response: NewCustomer[]) => {\r\n      this.customerList = this.filteredCustomers = response;\r\n    },\r\n    (err: any) => console.log(err),\r\n    () => console.log('getCustomerOrders() retrieved customer list'));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl, ValidatorFn, FormArray } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { Customer } from './customer';\nimport { DataService } from '../core/data.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NewCustomer, Product } from '../shared/interfaces';\nimport { DatePipe } from '@angular/common';\nimport { templateJitUrl } from '@angular/compiler';\n\n\nfunction emailMatcher(c: AbstractControl): {[key: string]: boolean} | null {\n  const emailControl = c.get('email');\n  const confirmEmailControl = c.get('confirmEmail');\n\n  if (emailControl.pristine || confirmEmailControl.pristine) {\n    return null;\n  }\n\n  if (emailControl.value === confirmEmailControl.value) {\n    return null;\n  }\n\n  return {match: true};\n}\n\nfunction ratingRange(min: number, max: number): ValidatorFn {\n  return (c: AbstractControl): {[key: string]: boolean} | null => {\n    if (c.value !== null && (isNaN(c.value) || c.value < min || c.value > max)) {\n      return { range : true};\n    }\n\n    return null;\n  };\n}\n\n@Component({\n  templateUrl: './contactus.component.html',\n  providers: [DatePipe]\n})\nexport class ContactUsComponent implements OnInit {\n  contactUsForm: FormGroup;\n  customer = new Customer();\n  emailMessage: string;\n  confirmEmailMessage: string;\n  errorMessage: string;\n\n  product: Product = {\n    productCovering: '',\n    productDimensions: '',\n    productServings: 0,\n    productName: '',\n    category: '',\n    description: '',\n    imageUrl: ''\n  };\n\n  get addresses(): FormArray {\n\n    return this.contactUsForm.get('addresses') as FormArray;\n  }\n\nprivate validationMessaged = {\n  required: 'Please enter your email address.',\n  email: 'Please enter a valid email address.',\n  confirmEmail: 'Please enter the same email address.'\n};\n\nmyDate = new Date();\n\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private dataService: DataService,\n              private router: Router,\n              private datePipe: DatePipe) { }\n\n  ngOnInit() {\n\n    const id = this.route.snapshot.params.orderId;\n    if (id !== '0') {\n      console.log('Id ' + id);\n      this.getProduct(id);\n    } else {\n      console.log ('No order was selected');\n    }\n\n    this.contactUsForm = this.fb.group({\n      firstName: ['', [Validators.required, Validators.minLength(3)]],\n      lastName: ['', [Validators.required, Validators.maxLength(50)]],\n      email: ['', [Validators.required, Validators.email]],\n      phone: '',\n      notification: 'email',\n      orderType1: '',\n      orderType2: '',\n      orderType3: '',\n      orderType4: '',\n      servings: '',\n      occassion: '',\n      dateOfOccassion: '',\n      dateOfApplication: this.datePipe.transform(this.myDate, 'yyyy-MM-dd'),\n      theme: '',\n      productId: '',\n      productImage: null,\n      productName: ''\n     });\n\n\n    this.contactUsForm.get('notification').valueChanges.subscribe( value =>\n      this.setNotification(value));\n\n    const emailControl = this.contactUsForm.get('email');\n    emailControl.valueChanges.pipe(\n        debounceTime(1000)\n        ).subscribe(\n          value => this.setMessage(emailControl)\n        );\n\n\n  }\n\n  getProduct(id: string) {\n    this.dataService.getProduct(id)\n      .subscribe((product: Product) => {\n        this.product = product;\n        this.contactUsForm = this.fb.group({\n          firstName: ['', [Validators.required, Validators.minLength(3)]],\n          lastName: ['', [Validators.required, Validators.maxLength(50)]],\n          email: ['', [Validators.required, Validators.email]],\n          phone: '',\n          notification: 'email',\n          orderType1: '',\n          orderType2: '',\n          orderType3: '',\n          orderType4: '',\n          servings: '',\n          occassion: '',\n          dateOfOccassion: '',\n          dateOfApplication: this.datePipe.transform(this.myDate, 'yyyy-MM-dd'),\n          theme: '',\n          productId: product._id,\n          productImage: product.imageUrl,\n          productName: product.productName\n        });\n      },\n      (err: any) => console.log(err));\n}\n\n  save() {\n        this.dataService.insertNewCustomer(this.contactUsForm.value)\n        .subscribe((contactUsForm: NewCustomer) => {\n          if (contactUsForm) {\n            console.log('customer was inserted successfully');\n            this.router.navigate(['/welcome']);\n          } else {\n            this.errorMessage = 'Unable to add new customer';\n          }\n        },\n        (err) => console.log(err));\n  }\n\n  setNotification(notifyvia: string): void {\n    const phoneControl = this.contactUsForm.get('phone');\n    if (notifyvia === 'text' || notifyvia === 'whatsapp') {\n      phoneControl.setValidators(Validators.required);\n    } else {\n      phoneControl.clearValidators();\n    }\n    phoneControl.updateValueAndValidity();\n  }\n\n  setMessage(c: AbstractControl): void {\n    this.emailMessage = '';\n    if ((c.touched || c.dirty) && c.errors) {\n      this.emailMessage = Object.keys(c.errors).map(\n        key => this.validationMessaged[key]).join(' ');\n    }\n  }\n\n  setConfirmMessage(c: AbstractControl): void {\n    this.confirmEmailMessage = '';\n    if ((c.touched || c.dirty) && c.errors) {\n      this.confirmEmailMessage = Object.keys(c.errors).map(\n        key => this.validationMessaged[key]).join(' ');\n    }\n  }\n}\n","export class Customer {\r\n\r\n  constructor(\r\n    public firstName = '',\r\n    public lastName = '',\r\n    public email = '',\r\n    public confirmEmail = '',\r\n    public phone = '',\r\n    public notification = 'email',\r\n    public orderType1 = 'cakes',\r\n    public orderType2 = '',\r\n    public orderType3 = '',\r\n    public orderType4 = '',\r\n    public servings = '',\r\n    public occassion = '',\r\n    public theme = '',\r\n    public productId = '',\r\n    public productImage = null,\r\n    public productName = '') { }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { DataService } from '../core/data.service';\r\nimport { NewCustomer } from '../shared/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-new-customer',\r\n  templateUrl: './neworder.component.html'\r\n})\r\nexport class NewOrderComponent implements OnInit {\r\n\r\n  customer: NewCustomer = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    confirmEmail: '',\r\n    phone: '',\r\n    notification: '',\r\n    orderType1: '',\r\n    orderType2: '',\r\n    orderType3: '',\r\n    orderType4: '',\r\n    servings: '',\r\n    occassion: '',\r\n    dateOfOccassion: null,\r\n    dateOfApplication: null,\r\n    theme: '',\r\n    productId: '',\r\n    productImage: null,\r\n    productName: ''\r\n  };\r\n\r\n  errorMessage: string;\r\n  deleteMessageEnabled: boolean;\r\n  operationText = 'Update';\r\n\r\n  constructor(private router: Router,\r\n              private route: ActivatedRoute,\r\n              private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    const id = this.route.snapshot.params.id;\r\n    this.getNewCustomer(id);\r\n\r\n  }\r\n\r\n  getNewCustomer(id: string) {\r\n      this.dataService.getNewCustomer(id)\r\n        .subscribe((customer: NewCustomer) => {\r\n          this.customer = customer;\r\n        },\r\n        (err: any) => console.log(err),\r\n        () => console.log('getNewCustomer() retreived data'));\r\n  }\r\n\r\n\r\n  submit() {\r\n\r\n      // if (this.customer._id) {\r\n\r\n      //   this.dataService.update(this.customer)\r\n      //     .subscribe((customer: NewCustomer) => {\r\n      //       if (customer) {\r\n      //         this.router.navigate(['/products']);\r\n      //       } else {\r\n      //         this.errorMessage = 'Unable to save product';\r\n      //       }\r\n      //     },\r\n      //     (err: any) => console.log(err));\r\n\r\n      // }\r\n  }\r\n\r\n  cancel(event: Event) {\r\n    event.preventDefault();\r\n    this.router.navigate(['/contactus-list']);\r\n  }\r\n\r\n  delete(event: Event) {\r\n    event.preventDefault();\r\n    this.dataService.deleteNewCustomer(this.customer._id)\r\n        .subscribe((status: boolean) => {\r\n          if (status) {\r\n            this.router.navigate(['/contactus-list']);\r\n          } else {\r\n            this.errorMessage = 'Unable to delete product';\r\n          }\r\n        },\r\n        (err) => console.log(err));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { User } from '../user/user';\r\nimport { MessageService } from '../core/message.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  currentUser: User;\r\n  adminUser: User;\r\n  redirectUrl: string;\r\n\r\n  get isLoggedIn(): boolean {\r\n     return !!this.adminUser;\r\n  }\r\n\r\n  constructor(private messageService: MessageService) { }\r\n\r\n  login(userName: string, password: string): void {\r\n    if (!userName || !password) {\r\n      this.messageService.addMessage('Please enter your userName and password');\r\n      return;\r\n    }\r\n    if (userName === 'admin' && password === 'admin') {\r\n      this.adminUser = {\r\n        id: 1,\r\n        userName,\r\n        isAdmin: true,\r\n\r\n      };\r\n      this.messageService.addMessage('Admin login');\r\n      return;\r\n    } else if (userName === 'wiss' && password === 'wiss') {\r\n      this.currentUser = {\r\n        id: 2,\r\n        userName,\r\n        isAdmin: false\r\n      };\r\n      this.messageService.addMessage(`User: ${this.currentUser.userName} logged in`);\r\n    } else {\r\n      this.messageService.addMessage(`Failed to login`);\r\n      }\r\n  }\r\n\r\n  logout(): void {\r\n    this.adminUser = null;\r\n    this.currentUser = null;\r\n  }\r\n}\r\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\n\n// Using the new HttpClientModule now. If you're still on < Angular 4.3 see the\n// core.module.ts.httpmodule file instead (simply rename it to the name\n// of this file to use it instead)\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\n\nimport { DataService } from './data.service';\nimport { DataFilterService } from './data-filter.service';\nimport { Sorter } from './sorter';\nimport { TrackByService } from './trackby.service';\nimport { EnsureModuleLoadedOnceGuard } from '../shared/ensureModuleLoadedOnceGuard';\n\n@NgModule({\n  imports: [\n    // Can use with Angular 4.3+ to\n    HttpClientModule,\n    // Can use to override default names for XSRF cookie and header\n    // HttpClientXsrfModule.withOptions({\n    //   cookieName: 'My-XSRF-TOKEN',\n    //   headerName: 'My-X-XSRF-TOKEN',\n    // })\n  ],\n  providers: [ DataService, DataFilterService, Sorter, TrackByService]\n})\nexport class CoreModule extends EnsureModuleLoadedOnceGuard {    // Ensure that CoreModule is only loaded into AppModule\n\n  // Looks for the module in the parent injector to see if it's already been loaded (only want it loaded once)\n  constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\n    super(parentModule);\n  }\n\n}\n\n// Example of a custom XSRF class\n// export class MyCookieXSRFStrategy implements XSRFStrategy {\n//    constructor(\n//        private _cookieName: string = 'XSRF-TOKEN', private _headerName: string = 'X-XSRF-TOKEN') { }\n\n//    private getCookie(name: string) {\n//        let ca: Array<string> = document.cookie.split(';');\n//        let caLen: number = ca.length;\n//        let cookieName = name + \"=\";\n//        let c: string;\n\n//        for (let i: number = 0; i < caLen; i += 1) {\n//            c = ca[i].replace(/^\\s\\+/g, \"\");\n//            if (c.indexOf(cookieName) == 0) {\n//                return c.substring(cookieName.length, c.length);\n//            }\n//        }\n//        return \"\";\n//    }\n\n//    configureRequest(req: Request) {\n//        let xsrfToken = this.getCookie(this._cookieName);\n//        alert(xsrfToken);\n//        if (xsrfToken) {\n//            req.headers.set(this._headerName, xsrfToken);\n//        }\n//    }\n// }\n\n\n\n","import { Injectable } from '@angular/core';\nimport { propertyResolver } from '../shared/property-resolver';\n\n@Injectable()\nexport class DataFilterService {\n\n    filter(datasource: any[], filterProperties: string[], filterData: string) {\n        if (datasource && filterProperties && filterData) {\n            filterData = filterData.toUpperCase();\n            const filtered = datasource.filter(item => {\n                let match = false;\n                for (const prop of filterProperties) {\n                    let propVal: any = '';\n\n                    // Account for nested properties like 'state.name'\n                    if (prop.indexOf('.') > -1) {\n                        propVal = propertyResolver.resolve(prop, item);\n                        if (propVal) {\n                            propVal = propVal.toString().toUpperCase();\n                        }\n                    } else {\n                        if (item[prop]) {\n                            propVal = item[prop].toString().toUpperCase();\n                        }\n                    }\n\n                    if (propVal.indexOf(filterData) > -1) {\n                        match = true;\n                        break;\n                    }\n                }\n                return match;\n            });\n            return filtered;\n        } else {\n            return datasource;\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\n// Using the new HttpClientModule now. If you're still on < Angular 4.3 see the\n// data.service.ts file instead (simplify rename it to the name\n// of this file to use it instead)\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, throwError, Observer } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { ICustomer, IOrder, IState, IPagedResults, ICustomerResponse,\n        Product, IProductResponse, NewCustomer, NewCustomerResponse} from '../shared/interfaces';\nimport { ProductsGridComponent } from '../products/products-grid.component';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class DataService {\n\n    baseUrl = '/api/customers';\n    baseStatesUrl = '/api/states';\n    baseProductUrl = '/api/products';\n    baseCustomerOrderUrl = '/api/orders';\n\n    constructor(private http: HttpClient,\n                private router: Router) {\n\n    }\n\n    getCustomers(): Observable<ICustomer[]> {\n        return this.http.get<ICustomer[]>(this.baseUrl)\n            .pipe(\n                   map((customers: ICustomer[]) => {\n                       this.calculateCustomersOrderTotal(customers);\n                       return customers;\n                   }),\n                   catchError(this.handleError)\n                );\n    }\n\n    getCustomersPage(page: number, pageSize: number): Observable<IPagedResults<ICustomer[]>> {\n        return this.http.get<ICustomer[]>(`${this.baseUrl}/page/${page}/${pageSize}`, { observe: 'response' })\n            .pipe(\n                    map((res) => {\n                        // Need to observe response in order to get to this header (see {observe: 'response'} above)\n                        const totalRecords = +res.headers.get('x-inlinecount');\n                        const customers = res.body as ICustomer[];\n                        this.calculateCustomersOrderTotal(customers);\n                        return {\n                            results: customers,\n                            totalRecords\n                        };\n                    }),\n                    catchError(this.handleError)\n                );\n    }\n\n    getCustomer(id: string): Observable<ICustomer> {\n        return this.http.get<ICustomer>(this.baseUrl + '/' + id)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    insertCustomer(customer: ICustomer): Observable<ICustomer> {\n        return this.http.post<ICustomerResponse>(this.baseUrl, customer)\n            .pipe(\n                   map((data) => {\n                       console.log('insertCustomer status: ' + data.status);\n                       return data.customer;\n                   }),\n                   catchError(this.handleError)\n                );\n    }\n\n    updateCustomer(customer: ICustomer): Observable<ICustomer> {\n        return this.http.put<ICustomerResponse>(this.baseUrl + '/' + customer._id, customer)\n            .pipe(\n                   map((data) => {\n                       console.log('updateCustomer status: ' + data.status);\n                       return data.customer;\n                   }),\n                   catchError(this.handleError)\n                );\n    }\n\n    deleteCustomer(id: string): Observable<boolean> {\n        return this.http.delete<boolean>(this.baseUrl + '/' + id)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    getStates(): Observable<IState[]> {\n        return this.http.get<IState[]>(this.baseStatesUrl)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    // Get list of all products, modify product, add product, and delete a product\n    getProducts(): Observable<Product[]> {\n      return this.http.get<Product[]>(this.baseProductUrl)\n        .pipe(\n          map((products: Product[]) => {\n              return products;\n          }),\n          catchError(this.handleError)\n        );\n  }\n\n    getProduct(id: string): Observable<Product> {\n      return this.http.get<Product>(this.baseProductUrl + '/' + id)\n        .pipe(\n          catchError(this.handleError)\n        );\n    }\n\n\n    updateProduct(product: Product): Observable<Product> {\n      return this.http.put<IProductResponse>(this.baseProductUrl + '/' + product._id, product)\n        .pipe(\n          map((data) => {\n              console.log('Updating Product ' + data.status);\n              return data.product;\n          }),\n          catchError(this.handleError)\n        );\n    }\n\n    insertProduct(product: Product): Observable<Product> {\n      return this.http.post<IProductResponse>(this.baseProductUrl, product)\n        .pipe(\n          map((data) => {\n              console.log('Inserting Product ' + data.status);\n              this.router.navigate(['/welcome']);\n              return data.product;\n          }),\n          catchError(this.handleError)\n        );\n    }\n\n    deleteProduct(id: string): Observable<boolean> {\n      return this.http.delete<boolean>(this.baseProductUrl + '/' + id)\n        .pipe(\n          catchError(this.handleError)\n        );\n    }\n    // will catch all the errors returned by any REST function and return it to the user\n    calculateCustomersOrderTotal(customers: ICustomer[]) {\n        for (const customer of customers) {\n            if (customer && customer.orders) {\n                let total = 0;\n                for (const order of customer.orders) {\n                    total += (order.price * order.quantity);\n                }\n                customer.orderTotal = total;\n            }\n        }\n    }\n    getCustomerOrders(): Observable<NewCustomer[]> {\n      return this.http.get<NewCustomer[]>(this.baseCustomerOrderUrl)\n        .pipe(\n          map((customerList: NewCustomer[]) => {\n            return customerList;\n          }),\n          catchError(this.handleError)\n        );\n    }\n\n    getNewCustomer(id: string): Observable<NewCustomer> {\n        return this.http.get<NewCustomer>(this.baseCustomerOrderUrl + '/' + id)\n        .pipe(\n          catchError(this.handleError)\n        );\n    }\n\n    // Contact list insert new customer order\n    insertNewCustomer(customer: NewCustomer[]): Observable<NewCustomer> {\n        return this.http.post<NewCustomerResponse>(this.baseCustomerOrderUrl, customer)\n          .pipe(\n            map((data) => {\n              console.log('Inserting new Customer ' + data.status);\n              this.router.navigate(['/welcome']);\n              return data.customer;\n            }),\n            catchError(this.handleError)\n          );\n    }\n\n    deleteNewCustomer(id: string): Observable<boolean> {\n      return this.http.delete<boolean>(this.baseCustomerOrderUrl + '/' + id)\n        .pipe(\n          catchError(this.handleError)\n        );\n    }\n\n    // handles errors\n    private handleError(error: HttpErrorResponse) {\n        console.error('server error:', error);\n        if (error.error instanceof Error) {\n          const errMessage = error.error.message;\n          return throwError(errMessage);\n          // Use the following instead if using lite-server\n          // return Observable.throw(err.text() || 'backend server error');\n        }\n        return throwError(error || 'Node.js server error');\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n  private _messages: string[] = [];\r\n  isDisplayed = false;\r\n\r\n  get messages(): string[] {\r\n    return this._messages;\r\n  }\r\n\r\n  addMessage(message: string): void {\r\n    const currentDate = new Date();\r\n    this.messages.unshift(message + ' at ' + currentDate.toLocaleString());\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { propertyResolver } from '../shared/property-resolver';\n\n@Injectable()\nexport class Sorter {\n\nproperty: string = null;\ndirection = 1;\n\n    sort(collection: any[], prop: any) {\n        this.property = prop;\n        this.direction = (this.property === prop) ? this.direction * -1 : 1;\n\n        collection.sort((a: any, b: any) => {\n            let aVal: any;\n            let bVal: any;\n\n            // Handle resolving complex properties such as 'state.name' for prop value\n            if (prop && prop.indexOf('.') > -1) {\n              aVal = propertyResolver.resolve(prop, a);\n              bVal = propertyResolver.resolve(prop, b);\n            } else {\n              aVal = a[prop];\n              bVal = b[prop];\n            }\n\n            // Fix issues that spaces before/after string value can cause such as ' San Francisco'\n            if (this.isString(aVal)) { aVal = aVal.trim().toUpperCase(); }\n            if (this.isString(bVal)) { bVal = bVal.trim().toUpperCase(); }\n\n            if (aVal === bVal) {\n                return 0;\n            } else if (aVal > bVal) {\n                return this.direction * -1;\n            } else {\n                return this.direction * 1;\n            }\n        });\n    }\n\n    isString(val: any): boolean {\n      return (val && (typeof val === 'string' || val instanceof String));\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ICustomer, Product } from '../shared/interfaces';\n\n@Injectable()\nexport class TrackByService {\n\n  customer(index: number, customer: ICustomer) {\n    return customer._id;\n  }\n\n  product(index: number, product: Product) {\n    return product._id;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { DataService } from '../core/data.service';\nimport { ICustomer, IState } from '../shared/interfaces';\nimport { ValidationService } from '../shared/validation.service';\n\n@Component({\n  selector: 'app-customer-edit-reactive',\n  templateUrl: './customer-edit-reactive.component.html'\n})\nexport class CustomerEditReactiveComponent implements OnInit {\n\n  customerForm: FormGroup;\n  customer: ICustomer = {\n    firstName: '',\n    lastName: '',\n    gender: '',\n    address: '',\n    email: '',\n    city: '',\n    zip: 0\n  };\n  states: IState[];\n  errorMessage: string;\n  deleteMessageEnabled: boolean;\n  operationText = 'Insert';\n\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              private dataService: DataService,\n              private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    const id = this.route.snapshot.params.id;\n    if (id !== '0') {\n      this.operationText = 'Update';\n      this.getCustomer(id);\n    }\n\n    this.getStates();\n    this.buildForm();\n  }\n\n  getCustomer(id: string) {\n      this.dataService.getCustomer(id)\n        .subscribe((customer: ICustomer) => {\n          this.customer = customer;\n          this.buildForm();\n        },\n        (err) => console.log(err));\n  }\n\n  buildForm() {\n      this.customerForm = this.formBuilder.group({\n        firstName:  [this.customer.firstName, Validators.required],\n        lastName:   [this.customer.lastName, Validators.required],\n        gender:     [this.customer.gender, Validators.required],\n        email:      [this.customer.email, [Validators.required, ValidationService.emailValidator]],\n        address:    [this.customer.address, Validators.required],\n        city:       [this.customer.city, Validators.required],\n        stateId:    [this.customer.stateId, Validators.required]\n      });\n  }\n\n  getStates() {\n    this.dataService.getStates().subscribe((states: IState[]) => this.states = states);\n  }\n\n  submit({ value, valid }: { value: ICustomer, valid: boolean }) {\n\n      value._id = this.customer._id;\n      value.zip = this.customer.zip || 0;\n      // var customer: ICustomer = {\n      //   _id: this.customer._id,\n      // };\n\n      if (value._id) {\n\n        this.dataService.updateCustomer(value)\n          .subscribe((customer: ICustomer) => {\n            if (customer) {\n              this.router.navigate(['/customers']);\n            } else {\n              this.errorMessage = 'Unable to save customer';\n            }\n          },\n          (err) => console.log(err));\n\n      } else {\n\n        this.dataService.insertCustomer(value)\n          .subscribe((customer: ICustomer) => {\n            if (customer) {\n              this.router.navigate(['/customers']);\n            } else {\n              this.errorMessage = 'Unable to add customer';\n            }\n          },\n          (err) => console.log(err));\n\n      }\n  }\n\n  cancel(event: Event) {\n    event.preventDefault();\n    this.router.navigate(['/customers']);\n  }\n\n  delete(event: Event) {\n    event.preventDefault();\n    this.dataService.deleteCustomer(this.customer._id)\n        .subscribe((status: boolean) => {\n          if (status) {\n            this.router.navigate(['/customers']);\n          } else {\n            this.errorMessage = 'Unable to delete customer';\n          }\n        },\n        (err) => console.log(err));\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { DataService } from '../core/data.service';\nimport { ICustomer, IState } from '../shared/interfaces';\n\n@Component({\n  selector: 'app-customer-edit',\n  templateUrl: './customer-edit.component.html'\n})\nexport class CustomerEditComponent implements OnInit {\n\n  customer: ICustomer = {\n    firstName: '',\n    lastName: '',\n    gender: '',\n    address: '',\n    email: '',\n    city: '',\n    zip: 0\n  };\n  states: IState[];\n  errorMessage: string;\n  deleteMessageEnabled: boolean;\n  operationText = 'Insert';\n\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              private dataService: DataService) { }\n\n  ngOnInit() {\n    const id = this.route.snapshot.params.id;\n    if (id !== '0') {\n      this.operationText = 'Update';\n      this.getCustomer(id);\n    }\n\n    this.getStates();\n  }\n\n  getCustomer(id: string) {\n      this.dataService.getCustomer(id)\n        .subscribe((customer: ICustomer) => {\n          this.customer = customer;\n        },\n        (err: any) => console.log(err));\n  }\n\n  getStates() {\n    this.dataService.getStates().subscribe((states: IState[]) => this.states = states);\n  }\n\n  submit() {\n\n      if (this.customer._id) {\n\n        this.dataService.updateCustomer(this.customer)\n          .subscribe((customer: ICustomer) => {\n            if (customer) {\n              this.router.navigate(['/customers']);\n            } else {\n              this.errorMessage = 'Unable to save customer';\n            }\n          },\n          (err: any) => console.log(err));\n\n      } else {\n\n        this.dataService.insertCustomer(this.customer)\n          .subscribe((customer: ICustomer) => {\n            if (customer) {\n              this.router.navigate(['/customers']);\n            } else {\n              this.errorMessage = 'Unable to add customer';\n            }\n          },\n          (err: any) => console.log(err));\n\n      }\n  }\n\n  cancel(event: Event) {\n    event.preventDefault();\n    this.router.navigate(['/customers']);\n  }\n\n  delete(event: Event) {\n    event.preventDefault();\n    this.dataService.deleteCustomer(this.customer._id)\n        .subscribe((status: boolean) => {\n          if (status) {\n            this.router.navigate(['/customers']);\n          } else {\n            this.errorMessage = 'Unable to delete customer';\n          }\n        },\n        (err) => console.log(err));\n  }\n\n}\n","import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\nimport { ICustomer } from '../shared/interfaces';\nimport { Sorter } from '../core/sorter';\nimport { TrackByService } from '../core/trackby.service';\n\n@Component({\n  selector: 'app-customers-grid',\n  templateUrl: './customers-grid.component.html',\n  // When using OnPush detectors, then the framework will check an OnPush\n  // component when any of its input properties changes, when it fires\n  // an event, or when an observable fires an event ~ Victor Savkin (Angular Team)\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomersGridComponent implements OnInit {\n\n  imageWidth = 50;\n  imageMargin = 2;\n  @Input() customers: ICustomer[] = [];\n\n  constructor(private sorter: Sorter, public trackby: TrackByService) { }\n\n  ngOnInit() {\n\n  }\n\n  sort(prop: string) {\n      this.sorter.sort(this.customers, prop);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { DataFilterService } from '../core/data-filter.service';\nimport { DataService } from '../core/data.service';\nimport { ICustomer, IOrder, IPagedResults } from '../shared/interfaces';\n\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html'\n})\nexport class CustomersComponent implements OnInit {\n\n  title: string;\n  customers: ICustomer[] = [];\n  filteredCustomers: ICustomer[] = [];\n\n  totalRecords = 0;\n  pageSize = 10;\n\n  constructor(private router: Router,\n              private dataService: DataService,\n              private dataFilter: DataFilterService) { }\n\n  ngOnInit() {\n    this.title = 'Customers';\n    this.getCustomersPage(1);\n  }\n\n  filterChanged(filterText: string) {\n    if (filterText && this.customers) {\n        const props = ['firstName', 'lastName', 'address', 'city', 'state.name', 'orderTotal'];\n        this.filteredCustomers = this.dataFilter.filter(this.customers, props, filterText);\n    } else {\n      this.filteredCustomers = this.customers;\n    }\n  }\n\n  pageChanged(page: number) {\n    this.getCustomersPage(page);\n  }\n\n  getCustomersPage(page: number) {\n    this.dataService.getCustomersPage((page - 1) * this.pageSize, this.pageSize)\n        .subscribe((response: IPagedResults<ICustomer[]>) => {\n          this.customers = this.filteredCustomers = response.results;\n          this.totalRecords = response.totalRecords;\n        },\n        (err: any) => console.log(err),\n        () => console.log('getCustomersPage() retrieved customers'));\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MessageService } from '../core/message.service';\n\n@Component({\n  templateUrl: './message.component.html',\n  styles: [\n    '.message-row { margin-bottom: 10px }'\n  ]\n})\nexport class MessageComponent {\n  get messages() {\n    return this.messageService.messages;\n  }\n\n  constructor(private messageService: MessageService,\n              private router: Router) { }\n\n  close(): void {\n    this.router.navigate([{ outlet: { popup : null}}]);\n    this.messageService.isDisplayed = false;\n  }\n}\n","export * from './modal.module';\nexport * from './modal.service';","export default \"/* MODAL STYLES\\n-------------------------------*/\\njw-modal {\\n  /* modals are hidden by default */\\n  display: none;\\n}\\njw-modal .jw-modal {\\n  /* modal container fixed across whole screen */\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  /* z-index must be higher than .jw-modal-background */\\n  z-index: 1000;\\n  /* enables scrolling for tall modals */\\n  overflow: auto;\\n}\\njw-modal .jw-modal .jw-modal-body {\\n  padding: 20px;\\n  background: #fff;\\n  /* margin exposes part of the modal background */\\n  margin: 40px;\\n}\\njw-modal .jw-modal-background {\\n  /* modal background fixed across whole screen */\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  /* semi-transparent black  */\\n  background-color: #000;\\n  opacity: 0.75;\\n  /* z-index must be below .jw-modal and above everything else  */\\n  z-index: 900;\\n}\\nbody.jw-modal-open {\\n  /* body overflow is hidden to hide main scrollbar when modal window is open */\\n  overflow: hidden;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kYWwvbW9kYWwuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL21vZGFsL0Q6L0FuZ3VsYXIvQW5ndWxhckNMSS1Nb25nb0RCIC0gQ3VzdG9tZXJzL3NyYy9hcHAvbW9kYWwvbW9kYWwuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Z0NBQ2dDO0FDQ2hDO0VEQ0UsaUNBQWlDO0VDQy9CLGFBQUE7QURDSjtBQ0hBO0VES0UsOENBQThDO0VDQ3hDLGVBQUE7RUFDQSxNQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7RUFDQSxPQUFBO0VEQ04scURBQXFEO0VDRS9DLGFBQUE7RURBTixzQ0FBc0M7RUNHaEMsY0FBQTtBRERSO0FDZkE7RUFtQlksYUFBQTtFQUNBLGdCQUFBO0VERFYsZ0RBQWdEO0VDSXRDLFlBQUE7QURGWjtBQ3JCQTtFRHVCRSwrQ0FBK0M7RUNNekMsZUFBQTtFQUNBLE1BQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLE9BQUE7RURKTiw0QkFBNEI7RUNPdEIsc0JBQUE7RUFDQSxhQUFBO0VETE4sK0RBQStEO0VDUXpELFlBQUE7QUROUjtBQ1VBO0VEUkUsNkVBQTZFO0VDVTNFLGdCQUFBO0FEUkoiLCJmaWxlIjoic3JjL2FwcC9tb2RhbC9tb2RhbC5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIE1PREFMIFNUWUxFU1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5qdy1tb2RhbCB7XG4gIC8qIG1vZGFscyBhcmUgaGlkZGVuIGJ5IGRlZmF1bHQgKi9cbiAgZGlzcGxheTogbm9uZTtcbn1cbmp3LW1vZGFsIC5qdy1tb2RhbCB7XG4gIC8qIG1vZGFsIGNvbnRhaW5lciBmaXhlZCBhY3Jvc3Mgd2hvbGUgc2NyZWVuICovXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICAvKiB6LWluZGV4IG11c3QgYmUgaGlnaGVyIHRoYW4gLmp3LW1vZGFsLWJhY2tncm91bmQgKi9cbiAgei1pbmRleDogMTAwMDtcbiAgLyogZW5hYmxlcyBzY3JvbGxpbmcgZm9yIHRhbGwgbW9kYWxzICovXG4gIG92ZXJmbG93OiBhdXRvO1xufVxuanctbW9kYWwgLmp3LW1vZGFsIC5qdy1tb2RhbC1ib2R5IHtcbiAgcGFkZGluZzogMjBweDtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgLyogbWFyZ2luIGV4cG9zZXMgcGFydCBvZiB0aGUgbW9kYWwgYmFja2dyb3VuZCAqL1xuICBtYXJnaW46IDQwcHg7XG59XG5qdy1tb2RhbCAuanctbW9kYWwtYmFja2dyb3VuZCB7XG4gIC8qIG1vZGFsIGJhY2tncm91bmQgZml4ZWQgYWNyb3NzIHdob2xlIHNjcmVlbiAqL1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgLyogc2VtaS10cmFuc3BhcmVudCBibGFjayAgKi9cbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgb3BhY2l0eTogMC43NTtcbiAgLyogei1pbmRleCBtdXN0IGJlIGJlbG93IC5qdy1tb2RhbCBhbmQgYWJvdmUgZXZlcnl0aGluZyBlbHNlICAqL1xuICB6LWluZGV4OiA5MDA7XG59XG5ib2R5Lmp3LW1vZGFsLW9wZW4ge1xuICAvKiBib2R5IG92ZXJmbG93IGlzIGhpZGRlbiB0byBoaWRlIG1haW4gc2Nyb2xsYmFyIHdoZW4gbW9kYWwgd2luZG93IGlzIG9wZW4gKi9cbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbiIsIi8qIE1PREFMIFNUWUxFU1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5qdy1tb2RhbCB7XG4gICAgLyogbW9kYWxzIGFyZSBoaWRkZW4gYnkgZGVmYXVsdCAqL1xuICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICAuanctbW9kYWwge1xuICAgICAgICAvKiBtb2RhbCBjb250YWluZXIgZml4ZWQgYWNyb3NzIHdob2xlIHNjcmVlbiAqL1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgbGVmdDogMDtcblxuICAgICAgICAvKiB6LWluZGV4IG11c3QgYmUgaGlnaGVyIHRoYW4gLmp3LW1vZGFsLWJhY2tncm91bmQgKi9cbiAgICAgICAgei1pbmRleDogMTAwMDtcbiAgICAgICAgXG4gICAgICAgIC8qIGVuYWJsZXMgc2Nyb2xsaW5nIGZvciB0YWxsIG1vZGFscyAqL1xuICAgICAgICBvdmVyZmxvdzogYXV0bztcblxuICAgICAgICAuanctbW9kYWwtYm9keSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAyMHB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcblxuICAgICAgICAgICAgLyogbWFyZ2luIGV4cG9zZXMgcGFydCBvZiB0aGUgbW9kYWwgYmFja2dyb3VuZCAqL1xuICAgICAgICAgICAgbWFyZ2luOiA0MHB4O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLmp3LW1vZGFsLWJhY2tncm91bmQge1xuICAgICAgICAvKiBtb2RhbCBiYWNrZ3JvdW5kIGZpeGVkIGFjcm9zcyB3aG9sZSBzY3JlZW4gKi9cbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGxlZnQ6IDA7XG5cbiAgICAgICAgLyogc2VtaS10cmFuc3BhcmVudCBibGFjayAgKi9cbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgICAgICAgb3BhY2l0eTogMC43NTtcbiAgICAgICAgXG4gICAgICAgIC8qIHotaW5kZXggbXVzdCBiZSBiZWxvdyAuanctbW9kYWwgYW5kIGFib3ZlIGV2ZXJ5dGhpbmcgZWxzZSAgKi9cbiAgICAgICAgei1pbmRleDogOTAwO1xuICAgIH1cbn1cblxuYm9keS5qdy1tb2RhbC1vcGVuIHtcbiAgICAvKiBib2R5IG92ZXJmbG93IGlzIGhpZGRlbiB0byBoaWRlIG1haW4gc2Nyb2xsYmFyIHdoZW4gbW9kYWwgd2luZG93IGlzIG9wZW4gKi9cbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuIl19 */\"","import { Component, ViewEncapsulation, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\n\nimport { ModalService } from './modal.service';\n\n@Component({\n    selector: 'jw-modal',\n    templateUrl: 'modal.component.html',\n    styleUrls: ['modal.component.less'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n    @Input() id: string;\n    private element: any;\n\n    constructor(private modalService: ModalService, private el: ElementRef) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit(): void {\n        // ensure id attribute exists\n        if (!this.id) {\n            console.error('modal must have an id');\n            return;\n        }\n\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\n        document.body.appendChild(this.element);\n\n        // close modal on background click\n        this.element.addEventListener('click', el => {\n            if (el.target.className === 'jw-modal') {\n                this.close();\n            }\n        });\n\n        // add self (this modal instance) to the modal service so it's accessible from controllers\n        this.modalService.add(this);\n    }\n\n    // remove self from modal service when component is destroyed\n    ngOnDestroy(): void {\n        this.modalService.remove(this.id);\n        this.element.remove();\n    }\n\n    // open modal\n    open(): void {\n        this.element.style.display = 'block';\n        document.body.classList.add('jw-modal-open');\n    }\n\n    // close modal\n    close(): void {\n        this.element.style.display = 'none';\n        document.body.classList.remove('jw-modal-open');\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ModalComponent } from './modal.component';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [ModalComponent],\n    exports: [ModalComponent]\n})\nexport class ModalModule { }","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class ModalService {\n    private modals: any[] = [];\n\n    add(modal: any) {\n        // add modal to array of active modals\n        this.modals.push(modal);\n    }\n\n    remove(id: string) {\n        // remove modal from array of active modals\n        this.modals = this.modals.filter(x => x.id !== id);\n    }\n\n    open(id: string) {\n        // open modal specified by id\n        const modal = this.modals.find(x => x.id === id);\n        modal.open();\n    }\n\n    close(id: string) {\n        // close modal specified by id\n        const modal = this.modals.find(x => x.id === id);\n        modal.close();\n    }\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { DataService } from '../core/data.service';\r\nimport { Product } from '../shared/interfaces';\r\nimport { AuthService } from '../core/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-product-edit',\r\n  templateUrl: './product-edit.component.html'\r\n})\r\nexport class ProductEditComponent implements OnInit {\r\n\r\n  get isLoggedIn(): boolean {\r\n    return this.authService.isLoggedIn;\r\n  }\r\n  product: Product = {\r\n    productCovering: '',\r\n    productDimensions: '',\r\n    productServings: 0,\r\n    productName: '',\r\n    category: '',\r\n    description: '',\r\n    imageUrl: ''\r\n  };\r\n\r\n  errorMessage: string;\r\n  deleteMessageEnabled: boolean;\r\n  operationText = 'Insert';\r\n\r\n  constructor(private router: Router,\r\n              private route: ActivatedRoute,\r\n              private dataService: DataService,\r\n              private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    const id = this.route.snapshot.params.id;\r\n    if (id !== '0') {\r\n      if (this.isLoggedIn) {\r\n        console.log('Id ' + id);\r\n        this.operationText = 'Update';\r\n      } else {\r\n        this.operationText = 'Order This';\r\n      }\r\n\r\n      this.getProduct(id);\r\n    }\r\n\r\n  }\r\n\r\n  getProduct(id: string) {\r\n      this.dataService.getProduct(id)\r\n        .subscribe((product: Product) => {\r\n          this.product = product;\r\n        },\r\n        (err: any) => console.log(err));\r\n  }\r\n\r\n\r\n  submit() {\r\n\r\n      if (this.product._id) {\r\n\r\n        this.dataService.updateProduct(this.product)\r\n          .subscribe((product: Product) => {\r\n            if (product) {\r\n              this.router.navigate(['/products']);\r\n            } else {\r\n              this.errorMessage = 'Unable to save product';\r\n            }\r\n          },\r\n          (err: any) => console.log(err));\r\n\r\n      } else {\r\n\r\n        this.dataService.insertProduct(this.product)\r\n          .subscribe((product: Product) => {\r\n            if (product) {\r\n              console.log('Product was added');\r\n              this.router.navigate(['/products']);\r\n            } else {\r\n              this.errorMessage = 'Unable to add product';\r\n            }\r\n          },\r\n          (err: any) => console.log(err));\r\n\r\n      }\r\n  }\r\n\r\n  cancel(event: Event) {\r\n    event.preventDefault();\r\n    this.router.navigate(['/products']);\r\n  }\r\n\r\n  delete(event: Event) {\r\n    event.preventDefault();\r\n    this.dataService.deleteProduct(this.product._id)\r\n        .subscribe((status: boolean) => {\r\n          if (status) {\r\n            this.router.navigate(['/products']);\r\n          } else {\r\n            this.errorMessage = 'Unable to delete product';\r\n          }\r\n        },\r\n        (err) => console.log(err));\r\n  }\r\n\r\n  addOrder() {\r\n    if (this.product._id) {\r\n      this.router.navigate(['/contactus-order/' + this.product._id]);\r\n    } else {\r\n      this.errorMessage = 'Unable to select this item';\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Product } from '../shared/interfaces';\r\nimport { Sorter } from '../core/sorter';\r\nimport { TrackByService } from '../core/trackby.service';\r\nimport { AuthService } from '../core/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-products-grid',\r\n  templateUrl: './products-grid.component.html',\r\n  // When using OnPush detectors, then the framework will check an OnPush\r\n  // component when any of its input properties changes, when it fires\r\n  // an event, or when an observable fires an event\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProductsGridComponent implements OnInit {\r\n\r\n\r\n  @Input() images = 4;\r\n  @Input() products: Product[] = [];\r\n\r\n  get isLoggedIn(): boolean {\r\n    return this.authService.isLoggedIn;\r\n  }\r\n\r\n  constructor(private sorter: Sorter,\r\n              public trackby: TrackByService,\r\n              private authService: AuthService) { }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  sort(prop: string) {\r\n        this.sorter.sort(this.products, prop);\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Product } from '../shared/interfaces';\nimport { DataFilterService } from '../core/data-filter.service';\nimport { DataService } from '../core/data.service';\nimport { AuthService } from '../core/auth.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html'\n})\nexport class ProductsComponent implements OnInit {\n\n  title: string;\n  public products: Product[] = [];\n  public images = [];\n  filteredProducts: Product[] = [];\n\n  totalRecords = 0;\n  pageSize = 10;\n  get isLoggedIn(): boolean {\n    return this.authService.isLoggedIn;\n  }\n  constructor(private router: Router,\n              private dataService: DataService,\n              private dataFilter: DataFilterService,\n              private authService: AuthService) { }\n\n  ngOnInit() {\n    this.title = 'Products';\n    this.getProducts();\n    this.displayImages();\n  }\n\n  filterChanged(filterText: string) {\n\n    console.log('The product data' + this.products);\n    if (filterText && this.products) {\n        const props = ['productName', 'description', 'dimensions', 'servings', 'covering', 'category'];\n        this.filteredProducts = this.dataFilter.filter(this.products, props, filterText);\n    } else {\n      this.filteredProducts = this.products;\n    }\n  }\n\n  pageChanged(page: number) {\n    this.getProducts();\n  }\n\n  getProducts() {\n    this.dataService.getProducts()\n    .subscribe((response: Product[]) => {\n      this.products = this.filteredProducts = response;\n      console.log('Logging products' + this.products);\n    },\n    (err: any) => console.log(err),\n    () => console.log('getProduct() retrieved products'));\n\n  }\n\n  displayImages() {\n    for (let i = 1; i < this.products.length; i ++) {\n      if ( i % 4 === 1 && i !== 1) {\n\n      }\n    }\n  }\n}\n","export class EnsureModuleLoadedOnceGuard {\n\n  constructor(targetModule: any) {\n    if (targetModule) {\n      throw new Error(`${targetModule.constructor.name} has already been loaded. Import this module in the AppModule only.`);\n    }\n  }\n\n}","import { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-filter-textbox',\n  template: `\n    <form>\n    <div class=\"text-filter\">\n         Search:&nbsp;\n         <input type=\"text\" name=\"filter\" id=\"ip2\"\n                [(ngModel)]=\"model.filter\"\n                (keyup)=\"filterChanged($event)\"  />\n    </div>\n    </form>\n  `\n})\nexport class FilterTextboxComponent {\n\n\n    model: { filter: string } = { filter: null };\n\n    @Output()\n    changed: EventEmitter<string> = new EventEmitter<string>();\n\n    filterChanged(event: any) {\n      event.preventDefault();\n      this.changed.emit(this.model.filter); // Raise changed event\n    }\n}\n","export default \".pagination>.active>a, .pagination>.active>a:focus, .pagination>.active>a:hover, .pagination>.active>span, .pagination>.active>span:focus, .pagination>.active>span:hover {\\n  background-color: #027FF4;\\n  border-color: #027FF4;\\n}\\n\\n.pagination a {\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQXlCO0VBQ3pCLHFCQUFxQjtBQUN2Qjs7QUFFQTtJQUNJLGVBQWU7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvcGFnaW5hdGlvbi9wYWdpbmF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFnaW5hdGlvbj4uYWN0aXZlPmEsIC5wYWdpbmF0aW9uPi5hY3RpdmU+YTpmb2N1cywgLnBhZ2luYXRpb24+LmFjdGl2ZT5hOmhvdmVyLCAucGFnaW5hdGlvbj4uYWN0aXZlPnNwYW4sIC5wYWdpbmF0aW9uPi5hY3RpdmU+c3Bhbjpmb2N1cywgLnBhZ2luYXRpb24+LmFjdGl2ZT5zcGFuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAyN0ZGNDtcbiAgYm9yZGVyLWNvbG9yOiAjMDI3RkY0O1xufVxuXG4ucGFnaW5hdGlvbiBhIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59Il19 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n   selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: [ './pagination.component.css' ]\n})\n\nexport class PaginationComponent implements OnInit {\n\n  private pagerTotalItems: number;\n  private pagerPageSize: number;\n\n  totalPages: number;\n  pages: number[] = [];\n  currentPage = 1;\n  isVisible = false;\n  previousEnabled = false;\n  nextEnabled = true;\n\n  @Input() get pageSize(): number {\n    return this.pagerPageSize;\n  }\n\n  set pageSize(size: number) {\n    this.pagerPageSize = size;\n    this.update();\n  }\n\n  @Input() get totalItems(): number {\n    return this.pagerTotalItems;\n  }\n\n  set totalItems(itemCount: number) {\n    this.pagerTotalItems = itemCount;\n    this.update();\n  }\n\n  @Output() pageChanged: EventEmitter<number> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  update() {\n    if (this.pagerTotalItems && this.pagerPageSize) {\n      this.totalPages = Math.ceil(this.pagerTotalItems / this.pageSize);\n      this.isVisible = true;\n      if (this.totalItems >= this.pageSize) {\n        for (let i = 1; i < this.totalPages + 1; i++) {\n          this.pages.push(i);\n        }\n      }\n      return;\n    }\n\n    this.isVisible = false;\n  }\n\n  previousNext(direction: number, event?: MouseEvent) {\n    let page: number = this.currentPage;\n    if (direction === -1) {\n        if (page > 1) { page--; }\n    } else {\n        if (page < this.totalPages) { page++; }\n    }\n    this.changePage(page, event);\n  }\n\n  changePage(page: number, event?: MouseEvent) {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.currentPage === page) { return; }\n    this.currentPage = page;\n    this.previousEnabled = this.currentPage > 1;\n    this.nextEnabled = this.currentPage < this.totalPages;\n    this.pageChanged.emit(page);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'capitalize' })\nexport class CapitalizePipe implements PipeTransform {\n\n  transform(value: any) {\n\t  if (value) {\n      \treturn value.charAt(0).toUpperCase() + value.slice(1);\n\t  }\n\t  return value;\n  }\n\n}","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'trim'})\nexport class TrimPipe implements PipeTransform {\n  transform(value: any) {\n    if (!value) {\n      return '';\n    }\n    return value.trim();\n  }\n}","export class propertyResolver {\n     static resolve(path: string, obj: any) {\n      return path.split('.').reduce((prev, curr) => {\n          return (prev ? prev[curr] : undefined)\n      }, obj || self)\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { CapitalizePipe } from './pipes/capitalize.pipe';\nimport { TrimPipe } from './pipes/trim.pipe';\nimport { FilterTextboxComponent } from './filter-textbox/filter-textbox.component';\n\n@NgModule({\n  imports: [ CommonModule, FormsModule, ReactiveFormsModule ],\n  declarations: [CapitalizePipe, TrimPipe, FilterTextboxComponent, PaginationComponent ],\n  exports: [ CommonModule, FormsModule, ReactiveFormsModule, CapitalizePipe, TrimPipe, FilterTextboxComponent, PaginationComponent ]\n})\nexport class SharedModule { }\n","//Original version created by Cory Rylan: https://coryrylan.com/blog/angular-2-form-builder-and-validation-management\nimport { AbstractControl } from '@angular/forms';\n\nexport class ValidationService {\n     \n    static getValidatorErrorMessage(code: string) {\n        let config = {\n            'required': 'Required',\n            'invalidCreditCard': 'Is invalid credit card number',\n            'invalidEmailAddress': 'Invalid email address',\n            'invalidPassword': 'Invalid password. Password must be at least 6 characters long, and contain a number.'\n        };\n        return config[code];\n    }\n\n    static creditCardValidator(control: AbstractControl) {\n        // Visa, MasterCard, American Express, Diners Club, Discover, JCB\n        if (control.value.match(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/)) {\n            return null;\n        } else {\n            return { 'invalidCreditCard': true };\n        }\n    }\n     \n    static emailValidator(control: AbstractControl) {\n        // RFC 2822 compliant regex\n        if (control.value.match(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)) {\n            return null;\n        } else {\n            return { 'invalidEmailAddress': true };\n        }\n    }\n     \n    static passwordValidator(control: AbstractControl) {\n        // {6,100}           - Assert password is between 6 and 100 characters\n        // (?=.*[0-9])       - Assert a string has at least one number\n        if (control.value.match(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/)) {\n            return null;\n        } else {\n            return { 'invalidPassword': true };\n        }\n    }\n}","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../core/auth.service';\n\n@Component({\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n  errorMessage: string;\n  pageTitle = 'Log In';\n\n  constructor(private authService: AuthService,\n              private router: Router) { }\n\n  login(loginForm: NgForm) {\n    if (loginForm && loginForm.valid) {\n      const userName = loginForm.form.value.userName;\n      const password = loginForm.form.value.password;\n      this.authService.login(userName, password);\n\n      // Navigate to the Url selected or Product List page after log in.\n      if (this.authService.redirectUrl) {\n        this.router.navigateByUrl(this.authService.redirectUrl);\n      } else {\n        this.router.navigate(['/products']);\n      }\n\n    } else {\n      this.errorMessage = 'Please enter a user name and password.';\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ModalService} from '../modal';\n\n@Component({\n  templateUrl: './welcome.component.html'\n})\n\nexport class WelcomeComponent implements OnInit {\n\n  public pageTitle = 'Welcome to the world of flavour and design';\n  bodytext: string;\n  constructor(private modalService: ModalService) { }\n\n  ngOnInit() {\n    this.bodytext = '+961 76 809 138';\n  }\n\n\n\n  openModal(id: string) {\n    this.modalService.open(id);\n  }\n\n  closeModal(id: string) {\n    this.modalService.close(id);\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}